{
    "nbformat_minor": 1, 
    "cells": [
        {
            "execution_count": 5, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "output_type": "stream", 
                    "name": "stdout", 
                    "text": "Fetching package metadata .............\nSolving package specifications: .\n\n# All requested packages already installed.\n# packages in environment at /opt/conda/envs/DSX-Python35:\n#\ngeopy                     1.18.1                     py_0    conda-forge\nFetching package metadata .............\nSolving package specifications: .\n\n# All requested packages already installed.\n# packages in environment at /opt/conda/envs/DSX-Python35:\n#\nfolium                    0.5.0                      py_0    conda-forge\nLibraries imported.\n"
                }
            ], 
            "source": "import pandas as pd\nimport numpy as np\nfrom bs4 import BeautifulSoup\nimport requests # library to handle requests\n\nimport json # library to handle JSON files\n\n!conda install -c conda-forge geopy --yes # uncomment this line if you haven't completed the Foursquare API lab\nfrom geopy.geocoders import Nominatim # convert an address into latitude and longitude values\n\n\nfrom pandas.io.json import json_normalize # tranform JSON file into a pandas dataframe\n\n# Matplotlib and associated plotting modules\nimport matplotlib.cm as cm\nimport matplotlib.colors as colors\n\n# import k-means from clustering stage\nfrom sklearn.cluster import KMeans\n\n!conda install -c conda-forge folium=0.5.0 --yes # uncomment this line if you haven't completed the Foursquare API lab\nimport folium # map rendering library\n\nprint('Libraries imported.')"
        }, 
        {
            "execution_count": 6, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [], 
            "source": "# Download and Explore Dataset\nhtml_data = requests.get(\"https://en.wikipedia.org/wiki/List_of_postal_codes_of_Canada:_M\")\nsoup = BeautifulSoup(html_data.content, 'lxml')"
        }, 
        {
            "execution_count": 7, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 7, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Postcode</th>\n      <th>Borough</th>\n      <th>Neighbourhood</th>\n    </tr>\n  </thead>\n  <tbody>\n  </tbody>\n</table>\n</div>", 
                        "text/plain": "Empty DataFrame\nColumns: [Postcode, Borough, Neighbourhood]\nIndex: []"
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "#Add headers to table\nimport pandas as pd\nheader_list = []\ntable_soup = soup.find('table', class_='wikitable sortable')\nfor header in table_soup.find_all('th'):\n    header_list.append(header.text.strip())\n\ntable_df = pd.DataFrame(columns=header_list)\ntable_df.head()"
        }, 
        {
            "execution_count": 8, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 8, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Postcode</th>\n      <th>Borough</th>\n      <th>Neighbourhood</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M1A</td>\n      <td>Not assigned</td>\n      <td>Not assigned</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M2A</td>\n      <td>Not assigned</td>\n      <td>Not assigned</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M3A</td>\n      <td>North York</td>\n      <td>Parkwoods</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M4A</td>\n      <td>North York</td>\n      <td>Victoria Village</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M5A</td>\n      <td>Downtown Toronto</td>\n      <td>Harbourfront</td>\n    </tr>\n  </tbody>\n</table>\n</div>", 
                        "text/plain": "  Postcode           Borough     Neighbourhood\n0      M1A      Not assigned      Not assigned\n1      M2A      Not assigned      Not assigned\n2      M3A        North York         Parkwoods\n3      M4A        North York  Victoria Village\n4      M5A  Downtown Toronto      Harbourfront"
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "#Add postcodes Datasets\n#for row in table\nfor tr in table_soup.find_all('tr'):\n    tds = tr.find_all('td')\n    if not tds:\n        continue\n    pd, bo, ne = [td.text.strip() for td in tds[:3]]\n    #row append([pd, bo, ne])\n    table_df = table_df.append({header_list[0]:pd, header_list[1]:bo, header_list[2]:ne}, ignore_index=True)\n\n\ntable_df.head()"
        }, 
        {
            "execution_count": 9, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 9, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Postcode</th>\n      <th>Borough</th>\n      <th>Neighbourhood</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2</th>\n      <td>M3A</td>\n      <td>North York</td>\n      <td>Parkwoods</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M4A</td>\n      <td>North York</td>\n      <td>Victoria Village</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M5A</td>\n      <td>Downtown Toronto</td>\n      <td>Harbourfront</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>M5A</td>\n      <td>Downtown Toronto</td>\n      <td>Regent Park</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>M6A</td>\n      <td>North York</td>\n      <td>Lawrence Heights</td>\n    </tr>\n  </tbody>\n</table>\n</div>", 
                        "text/plain": "  Postcode           Borough     Neighbourhood\n2      M3A        North York         Parkwoods\n3      M4A        North York  Victoria Village\n4      M5A  Downtown Toronto      Harbourfront\n5      M5A  Downtown Toronto       Regent Park\n6      M6A        North York  Lawrence Heights"
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "# Clean up data\n#1. Only process the cells that have an assigned borough. Ignore cells with a borough that is Not assigned\n# replace \"Not assigned\" to NaN\ntable_df['Borough'].replace(\"Not assigned\", np.nan, inplace = True)\n\n# Drop whole row with NaN in \"price\" column\ntable_df.dropna(subset=[\"Borough\"], axis=0, inplace=True)\ntable_df.head()"
        }, 
        {
            "execution_count": 10, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 10, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Postcode</th>\n      <th>Borough</th>\n      <th>Neighbourhood</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M1B</td>\n      <td>Scarborough</td>\n      <td>Rouge,Malvern</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M1C</td>\n      <td>Scarborough</td>\n      <td>Port Union,Highland Creek,Rouge Hill</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M1E</td>\n      <td>Scarborough</td>\n      <td>West Hill,Guildwood,Morningside</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M1G</td>\n      <td>Scarborough</td>\n      <td>Woburn</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M1H</td>\n      <td>Scarborough</td>\n      <td>Cedarbrae</td>\n    </tr>\n  </tbody>\n</table>\n</div>", 
                        "text/plain": "  Postcode      Borough                         Neighbourhood\n0      M1B  Scarborough                         Rouge,Malvern\n1      M1C  Scarborough  Port Union,Highland Creek,Rouge Hill\n2      M1E  Scarborough       West Hill,Guildwood,Morningside\n3      M1G  Scarborough                                Woburn\n4      M1H  Scarborough                             Cedarbrae"
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "#2. More than one neighborhood can exist in one postal code area. These rows will be combined into one row with the neighborhoods separated with a comma\ntable_df=table_df.groupby(\"Postcode\").agg(lambda x:','.join(set(x)))\ntable_df.reset_index(inplace=True)\ntable_df.head()"
        }, 
        {
            "execution_count": 11, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 11, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Postcode</th>\n      <th>Borough</th>\n      <th>Neighbourhood</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M1B</td>\n      <td>Scarborough</td>\n      <td>Rouge,Malvern</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M1C</td>\n      <td>Scarborough</td>\n      <td>Port Union,Highland Creek,Rouge Hill</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M1E</td>\n      <td>Scarborough</td>\n      <td>West Hill,Guildwood,Morningside</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M1G</td>\n      <td>Scarborough</td>\n      <td>Woburn</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M1H</td>\n      <td>Scarborough</td>\n      <td>Cedarbrae</td>\n    </tr>\n  </tbody>\n</table>\n</div>", 
                        "text/plain": "  Postcode      Borough                         Neighbourhood\n0      M1B  Scarborough                         Rouge,Malvern\n1      M1C  Scarborough  Port Union,Highland Creek,Rouge Hill\n2      M1E  Scarborough       West Hill,Guildwood,Morningside\n3      M1G  Scarborough                                Woburn\n4      M1H  Scarborough                             Cedarbrae"
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "#3. If a cell has a borough but a Not assigned neighborhood, then the neighborhood will be the same as the borough.\ntable_df.loc[table_df['Neighbourhood']==\"Not assigned\",'Neighbourhood']=table_df.loc[table_df['Neighbourhood']==\"Not assigned\",'Borough']\ntable_df.head()"
        }, 
        {
            "execution_count": 20, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "output_type": "stream", 
                    "name": "stdout", 
                    "text": "The dataframe has 11 boroughs and 103 neighborhoods.\n"
                }
            ], 
            "source": "#4. Use the .shape method to print the number of rows of your dataframe\n#table_df.shape\nprint('The dataframe has {} boroughs and {} neighborhoods.'.format(\n        len(table_df['Borough'].unique()),\n        table_df.shape[0]\n    )\n)"
        }, 
        {
            "execution_count": 13, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 13, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Postcode</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M1B</td>\n      <td>43.806686</td>\n      <td>-79.194353</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M1C</td>\n      <td>43.784535</td>\n      <td>-79.160497</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M1E</td>\n      <td>43.763573</td>\n      <td>-79.188711</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M1G</td>\n      <td>43.770992</td>\n      <td>-79.216917</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M1H</td>\n      <td>43.773136</td>\n      <td>-79.239476</td>\n    </tr>\n  </tbody>\n</table>\n</div>", 
                        "text/plain": "  Postcode   Latitude  Longitude\n0      M1B  43.806686 -79.194353\n1      M1C  43.784535 -79.160497\n2      M1E  43.763573 -79.188711\n3      M1G  43.770992 -79.216917\n4      M1H  43.773136 -79.239476"
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "# Now that you have built a dataframe of the postal code of each neighborhood along with the borough name and neighborhood name, \n# in order to utilize the Foursquare location data, we need to get the latitude and the longitude coordinates of each neighborhood.\n\nimport pandas as pd\nfilename = \"https://cocl.us/Geospatial_data\"\nheaders = [\"Postcode\", \"Latitude\", \"Longitude\"]\n\ndf = pd.read_csv(filename)\ndf.rename(columns={'Postal Code':'Postcode'}, inplace=True)\n#df.set_index(\"Postcode\", inplace=True)\ndf.head()"
        }, 
        {
            "execution_count": 14, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 14, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Postcode</th>\n      <th>Borough</th>\n      <th>Neighbourhood</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M1B</td>\n      <td>Scarborough</td>\n      <td>Rouge,Malvern</td>\n      <td>43.806686</td>\n      <td>-79.194353</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M1C</td>\n      <td>Scarborough</td>\n      <td>Port Union,Highland Creek,Rouge Hill</td>\n      <td>43.784535</td>\n      <td>-79.160497</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M1E</td>\n      <td>Scarborough</td>\n      <td>West Hill,Guildwood,Morningside</td>\n      <td>43.763573</td>\n      <td>-79.188711</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M1G</td>\n      <td>Scarborough</td>\n      <td>Woburn</td>\n      <td>43.770992</td>\n      <td>-79.216917</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M1H</td>\n      <td>Scarborough</td>\n      <td>Cedarbrae</td>\n      <td>43.773136</td>\n      <td>-79.239476</td>\n    </tr>\n  </tbody>\n</table>\n</div>", 
                        "text/plain": "  Postcode      Borough                         Neighbourhood   Latitude  \\\n0      M1B  Scarborough                         Rouge,Malvern  43.806686   \n1      M1C  Scarborough  Port Union,Highland Creek,Rouge Hill  43.784535   \n2      M1E  Scarborough       West Hill,Guildwood,Morningside  43.763573   \n3      M1G  Scarborough                                Woburn  43.770992   \n4      M1H  Scarborough                             Cedarbrae  43.773136   \n\n   Longitude  \n0 -79.194353  \n1 -79.160497  \n2 -79.188711  \n3 -79.216917  \n4 -79.239476  "
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "#Add Latitude and Longitude\n\ntoronto_df = pd.merge(table_df, df, on='Postcode', how='left')\ntoronto_df.head()"
        }, 
        {
            "source": "let's simplify the above map and segment and cluster only the neighborhoods that contain the word Toronto. So let's slice the original dataframe and create a new dataframe of the Toronto data.", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "execution_count": 34, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 34, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Postcode</th>\n      <th>Borough</th>\n      <th>Neighbourhood</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M4E</td>\n      <td>East Toronto</td>\n      <td>The Beaches</td>\n      <td>43.676357</td>\n      <td>-79.293031</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M4K</td>\n      <td>East Toronto</td>\n      <td>Riverdale,The Danforth West</td>\n      <td>43.679557</td>\n      <td>-79.352188</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M4L</td>\n      <td>East Toronto</td>\n      <td>India Bazaar,The Beaches West</td>\n      <td>43.668999</td>\n      <td>-79.315572</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M4M</td>\n      <td>East Toronto</td>\n      <td>Studio District</td>\n      <td>43.659526</td>\n      <td>-79.340923</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M4N</td>\n      <td>Central Toronto</td>\n      <td>Lawrence Park</td>\n      <td>43.728020</td>\n      <td>-79.388790</td>\n    </tr>\n  </tbody>\n</table>\n</div>", 
                        "text/plain": "  Postcode          Borough                  Neighbourhood   Latitude  \\\n0      M4E     East Toronto                    The Beaches  43.676357   \n1      M4K     East Toronto    Riverdale,The Danforth West  43.679557   \n2      M4L     East Toronto  India Bazaar,The Beaches West  43.668999   \n3      M4M     East Toronto                Studio District  43.659526   \n4      M4N  Central Toronto                  Lawrence Park  43.728020   \n\n   Longitude  \n0 -79.293031  \n1 -79.352188  \n2 -79.315572  \n3 -79.340923  \n4 -79.388790  "
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "toronto_data = toronto_df[toronto_df['Borough'].str.contains('toronto', case=False)].reset_index(drop=True)\ntoronto_data.head()"
        }, 
        {
            "source": "#### Use geopy library to get the latitude and longitude values of Toronto.", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "In order to define an instance of the geocoder, we need to define a user_agent. We will name our agent toronto_explorer, as shown below.", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "execution_count": 35, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "output_type": "stream", 
                    "name": "stdout", 
                    "text": "The geograpical coordinate of Totonto are 43.653963, -79.387207.\n"
                }
            ], 
            "source": "address = 'Toronto, Ontario'\n\ngeolocator = Nominatim(user_agent=\"toronto_explorer\")\nlocation = geolocator.geocode(address)\nlatitude = location.latitude\nlongitude = location.longitude\nprint('The geograpical coordinate of Totonto are {}, {}.'.format(latitude, longitude))"
        }, 
        {
            "source": "#### Create a map of Toronto with neighborhoods superimposed on top.", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "execution_count": 36, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 36, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,PCFET0NUWVBFIGh0bWw+CjxoZWFkPiAgICAKICAgIDxtZXRhIGh0dHAtZXF1aXY9ImNvbnRlbnQtdHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgogICAgPHNjcmlwdD5MX1BSRUZFUl9DQU5WQVMgPSBmYWxzZTsgTF9OT19UT1VDSCA9IGZhbHNlOyBMX0RJU0FCTEVfM0QgPSBmYWxzZTs8L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xlYWZsZXRAMS4yLjAvZGlzdC9sZWFmbGV0LmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeS8xLjExLjEvanF1ZXJ5Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4yLjAvanMvYm9vdHN0cmFwLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9jZG5qcy5jbG91ZGZsYXJlLmNvbS9hamF4L2xpYnMvTGVhZmxldC5hd2Vzb21lLW1hcmtlcnMvMi4wLjIvbGVhZmxldC5hd2Vzb21lLW1hcmtlcnMuanMiPjwvc2NyaXB0PgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL2xlYWZsZXRAMS4yLjAvZGlzdC9sZWFmbGV0LmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9jc3MvYm9vdHN0cmFwLm1pbi5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9ib290c3RyYXAvMy4yLjAvY3NzL2Jvb3RzdHJhcC10aGVtZS5taW4uY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vbWF4Y2RuLmJvb3RzdHJhcGNkbi5jb20vZm9udC1hd2Vzb21lLzQuNi4zL2Nzcy9mb250LWF3ZXNvbWUubWluLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9MZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy8yLjAuMi9sZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9yYXdnaXQuY29tL3B5dGhvbi12aXN1YWxpemF0aW9uL2ZvbGl1bS9tYXN0ZXIvZm9saXVtL3RlbXBsYXRlcy9sZWFmbGV0LmF3ZXNvbWUucm90YXRlLmNzcyIvPgogICAgPHN0eWxlPmh0bWwsIGJvZHkge3dpZHRoOiAxMDAlO2hlaWdodDogMTAwJTttYXJnaW46IDA7cGFkZGluZzogMDt9PC9zdHlsZT4KICAgIDxzdHlsZT4jbWFwIHtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtib3R0b206MDtyaWdodDowO2xlZnQ6MDt9PC9zdHlsZT4KICAgIAogICAgICAgICAgICA8c3R5bGU+ICNtYXBfNjg5N2U1NzI3NDhlNGRkYjhmNTFlM2IzNmMxZWNiOWQgewogICAgICAgICAgICAgICAgcG9zaXRpb24gOiByZWxhdGl2ZTsKICAgICAgICAgICAgICAgIHdpZHRoIDogMTAwLjAlOwogICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAuMCU7CiAgICAgICAgICAgICAgICBsZWZ0OiAwLjAlOwogICAgICAgICAgICAgICAgdG9wOiAwLjAlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICA8L3N0eWxlPgogICAgICAgIAo8L2hlYWQ+Cjxib2R5PiAgICAKICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb2xpdW0tbWFwIiBpZD0ibWFwXzY4OTdlNTcyNzQ4ZTRkZGI4ZjUxZTNiMzZjMWVjYjlkIiA+PC9kaXY+CiAgICAgICAgCjwvYm9keT4KPHNjcmlwdD4gICAgCiAgICAKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGJvdW5kcyA9IG51bGw7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgdmFyIG1hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCA9IEwubWFwKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ21hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCcsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7Y2VudGVyOiBbNDMuNjUzOTYzLC03OS4zODcyMDddLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgem9vbTogMTAsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXhCb3VuZHM6IGJvdW5kcywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxheWVyczogW10sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3b3JsZENvcHlKdW1wOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNyczogTC5DUlMuRVBTRzM4NTcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciB0aWxlX2xheWVyXzU0OWFjZWQ4MTU2ZTQ0NTk4ODg5YjliZGZjNzU5MGE1ID0gTC50aWxlTGF5ZXIoCiAgICAgICAgICAgICAgICAnaHR0cHM6Ly97c30udGlsZS5vcGVuc3RyZWV0bWFwLm9yZy97en0ve3h9L3t5fS5wbmcnLAogICAgICAgICAgICAgICAgewogICJhdHRyaWJ1dGlvbiI6IG51bGwsCiAgImRldGVjdFJldGluYSI6IGZhbHNlLAogICJtYXhab29tIjogMTgsCiAgIm1pblpvb20iOiAxLAogICJub1dyYXAiOiBmYWxzZSwKICAic3ViZG9tYWlucyI6ICJhYmMiCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzY4OTdlNTcyNzQ4ZTRkZGI4ZjUxZTNiMzZjMWVjYjlkKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl83YzUyNDZlNmIzODY0ODM0OGJmY2UxZTYxNWYwMjYzMSA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY3NjM1NzM5OTk5OTk5LC03OS4yOTMwMzEyXSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImJsdWUiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjMzE4NmNjIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzY4OTdlNTcyNzQ4ZTRkZGI4ZjUxZTNiMzZjMWVjYjlkKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2VmM2MzYmM3OGVkMzRjYTViMTc1YzBkNDA3OWNiZDUxID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzY1MzNmNTQ0ZmM0ZDQwMzY5ZTA1YTY4ZDJhMmZlMTg3ID0gJCgnPGRpdiBpZD0iaHRtbF82NTMzZjU0NGZjNGQ0MDM2OWUwNWE2OGQyYTJmZTE4NyIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+VGhlIEJlYWNoZXMsIEVhc3QgVG9yb250bzwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfZWYzYzNiYzc4ZWQzNGNhNWIxNzVjMGQ0MDc5Y2JkNTEuc2V0Q29udGVudChodG1sXzY1MzNmNTQ0ZmM0ZDQwMzY5ZTA1YTY4ZDJhMmZlMTg3KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzdjNTI0NmU2YjM4NjQ4MzQ4YmZjZTFlNjE1ZjAyNjMxLmJpbmRQb3B1cChwb3B1cF9lZjNjM2JjNzhlZDM0Y2E1YjE3NWMwZDQwNzljYmQ1MSk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl9hODNhZWFjM2MwODc0YWVkODU4YmFiNjg5YTVhZTM2MyA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY3OTU1NzEsLTc5LjM1MjE4OF0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJibHVlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzMxODZjYyIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCk7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF85NjBmN2ZiN2IxMGY0ZWI1OTA0OGI5OWI5M2ZmMDkwZSA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF82MDk2OTQ1ZjQ5YmU0MDI5YmE2OGI2NmViN2FhNWI4NyA9ICQoJzxkaXYgaWQ9Imh0bWxfNjA5Njk0NWY0OWJlNDAyOWJhNjhiNjZlYjdhYTViODciIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPlJpdmVyZGFsZSxUaGUgRGFuZm9ydGggV2VzdCwgRWFzdCBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF85NjBmN2ZiN2IxMGY0ZWI1OTA0OGI5OWI5M2ZmMDkwZS5zZXRDb250ZW50KGh0bWxfNjA5Njk0NWY0OWJlNDAyOWJhNjhiNjZlYjdhYTViODcpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfYTgzYWVhYzNjMDg3NGFlZDg1OGJhYjY4OWE1YWUzNjMuYmluZFBvcHVwKHBvcHVwXzk2MGY3ZmI3YjEwZjRlYjU5MDQ4Yjk5YjkzZmYwOTBlKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2MzYTBlMmRlYzg1NDRjZTdhMTM1YzJjZDM4NjZmMTllID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjY4OTk4NSwtNzkuMzE1NTcxNTk5OTk5OThdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiYmx1ZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMzMTg2Y2MiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfNjg5N2U1NzI3NDhlNGRkYjhmNTFlM2IzNmMxZWNiOWQpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfYWY0YTFmMzgyZWY3NGU0OGFhMTJmNmI2NTM1YzlhODIgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfMDA5NTZiNWU0NTc5NDhiMDgyNThjNDc2Nzc3MDI0ZDUgPSAkKCc8ZGl2IGlkPSJodG1sXzAwOTU2YjVlNDU3OTQ4YjA4MjU4YzQ3Njc3NzAyNGQ1IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5JbmRpYSBCYXphYXIsVGhlIEJlYWNoZXMgV2VzdCwgRWFzdCBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9hZjRhMWYzODJlZjc0ZTQ4YWExMmY2YjY1MzVjOWE4Mi5zZXRDb250ZW50KGh0bWxfMDA5NTZiNWU0NTc5NDhiMDgyNThjNDc2Nzc3MDI0ZDUpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfYzNhMGUyZGVjODU0NGNlN2ExMzVjMmNkMzg2NmYxOWUuYmluZFBvcHVwKHBvcHVwX2FmNGExZjM4MmVmNzRlNDhhYTEyZjZiNjUzNWM5YTgyKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzUyNTU4ZWFjM2E0OTRhMWJhZjVlMjJhMWRkOWNlN2VmID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjU5NTI1NSwtNzkuMzQwOTIzXSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImJsdWUiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjMzE4NmNjIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzY4OTdlNTcyNzQ4ZTRkZGI4ZjUxZTNiMzZjMWVjYjlkKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzIwMzAzNzI0NWU0NjQ0N2NiZGJhOTllNTY2ZmNlYWVmID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2IyNjlmNzFkNTZlMDRjY2I5YzRmYjZkOGMxNmJiYjQwID0gJCgnPGRpdiBpZD0iaHRtbF9iMjY5ZjcxZDU2ZTA0Y2NiOWM0ZmI2ZDhjMTZiYmI0MCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+U3R1ZGlvIERpc3RyaWN0LCBFYXN0IFRvcm9udG88L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzIwMzAzNzI0NWU0NjQ0N2NiZGJhOTllNTY2ZmNlYWVmLnNldENvbnRlbnQoaHRtbF9iMjY5ZjcxZDU2ZTA0Y2NiOWM0ZmI2ZDhjMTZiYmI0MCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl81MjU1OGVhYzNhNDk0YTFiYWY1ZTIyYTFkZDljZTdlZi5iaW5kUG9wdXAocG9wdXBfMjAzMDM3MjQ1ZTQ2NDQ3Y2JkYmE5OWU1NjZmY2VhZWYpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMTM1MDdkYmQzMzRmNDExY2FhYzc2MjUwZmJjNjkxZTYgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My43MjgwMjA1LC03OS4zODg3OTAxXSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImJsdWUiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjMzE4NmNjIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzY4OTdlNTcyNzQ4ZTRkZGI4ZjUxZTNiMzZjMWVjYjlkKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2IyMTJlOGFhMzgwMDQ4ODJhMDQ0MGQzYmNlMmIwOWFhID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzBkMTBmNzkwNzFkNzRmOGFhODNmMDU3MDUyNmEyMmQ4ID0gJCgnPGRpdiBpZD0iaHRtbF8wZDEwZjc5MDcxZDc0ZjhhYTgzZjA1NzA1MjZhMjJkOCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+TGF3cmVuY2UgUGFyaywgQ2VudHJhbCBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9iMjEyZThhYTM4MDA0ODgyYTA0NDBkM2JjZTJiMDlhYS5zZXRDb250ZW50KGh0bWxfMGQxMGY3OTA3MWQ3NGY4YWE4M2YwNTcwNTI2YTIyZDgpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfMTM1MDdkYmQzMzRmNDExY2FhYzc2MjUwZmJjNjkxZTYuYmluZFBvcHVwKHBvcHVwX2IyMTJlOGFhMzgwMDQ4ODJhMDQ0MGQzYmNlMmIwOWFhKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzM3YzkwNGMxOTA0ZjQ4NGViNWY3NzZmYjgyOGU3ODdjID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNzEyNzUxMSwtNzkuMzkwMTk3NV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJibHVlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzMxODZjYyIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCk7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9iNDRiMTcyYzg4ODM0ZGZjYjVlNjgwZTczYzg0ODdjMyA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF81NjI2ZDIwMDNiY2Y0MDIxOGIyOWE3NGRjZjViZjUyYSA9ICQoJzxkaXYgaWQ9Imh0bWxfNTYyNmQyMDAzYmNmNDAyMThiMjlhNzRkY2Y1YmY1MmEiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkRhdmlzdmlsbGUgTm9ydGgsIENlbnRyYWwgVG9yb250bzwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfYjQ0YjE3MmM4ODgzNGRmY2I1ZTY4MGU3M2M4NDg3YzMuc2V0Q29udGVudChodG1sXzU2MjZkMjAwM2JjZjQwMjE4YjI5YTc0ZGNmNWJmNTJhKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzM3YzkwNGMxOTA0ZjQ4NGViNWY3NzZmYjgyOGU3ODdjLmJpbmRQb3B1cChwb3B1cF9iNDRiMTcyYzg4ODM0ZGZjYjVlNjgwZTczYzg0ODdjMyk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl8xNTQwYzdjZmRlNzY0MjQyOWU0MDVjYmMwZWNiZmMxMCA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjcxNTM4MzQsLTc5LjQwNTY3ODQwMDAwMDAxXSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImJsdWUiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjMzE4NmNjIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzY4OTdlNTcyNzQ4ZTRkZGI4ZjUxZTNiMzZjMWVjYjlkKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzcyM2RlYTA5OTIyMTQ0NWViYmNkMmM1NDIwZTY1MWZhID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2RjZWE2Njg1NDllNjRhNzY5Zjg4NTY3NDk5MGY1MzJkID0gJCgnPGRpdiBpZD0iaHRtbF9kY2VhNjY4NTQ5ZTY0YTc2OWY4ODU2NzQ5OTBmNTMyZCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+Tm9ydGggVG9yb250byBXZXN0LCBDZW50cmFsIFRvcm9udG88L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzcyM2RlYTA5OTIyMTQ0NWViYmNkMmM1NDIwZTY1MWZhLnNldENvbnRlbnQoaHRtbF9kY2VhNjY4NTQ5ZTY0YTc2OWY4ODU2NzQ5OTBmNTMyZCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl8xNTQwYzdjZmRlNzY0MjQyOWU0MDVjYmMwZWNiZmMxMC5iaW5kUG9wdXAocG9wdXBfNzIzZGVhMDk5MjIxNDQ1ZWJiY2QyYzU0MjBlNjUxZmEpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMmM0Njg4ZjI4ZTBhNDNlNmI5N2UxZTZiNGM0NWRmZmUgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My43MDQzMjQ0LC03OS4zODg3OTAxXSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImJsdWUiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjMzE4NmNjIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzY4OTdlNTcyNzQ4ZTRkZGI4ZjUxZTNiMzZjMWVjYjlkKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzA2MzJhNThkNjVlMTQ5ZjA5MDJhZGI1NWQwZTFkYTQ0ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzIyNzM0OWNlNGJhZDQ0OWVhNDg4MGQ2ODA2NDUwYzc0ID0gJCgnPGRpdiBpZD0iaHRtbF8yMjczNDljZTRiYWQ0NDllYTQ4ODBkNjgwNjQ1MGM3NCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+RGF2aXN2aWxsZSwgQ2VudHJhbCBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF8wNjMyYTU4ZDY1ZTE0OWYwOTAyYWRiNTVkMGUxZGE0NC5zZXRDb250ZW50KGh0bWxfMjI3MzQ5Y2U0YmFkNDQ5ZWE0ODgwZDY4MDY0NTBjNzQpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfMmM0Njg4ZjI4ZTBhNDNlNmI5N2UxZTZiNGM0NWRmZmUuYmluZFBvcHVwKHBvcHVwXzA2MzJhNThkNjVlMTQ5ZjA5MDJhZGI1NWQwZTFkYTQ0KTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzFlMjM1MTI1Mzc2OTRiMTdiZTM5OGU3MjQxNzAzMDJkID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjg5NTc0MywtNzkuMzgzMTU5OTAwMDAwMDFdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiYmx1ZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMzMTg2Y2MiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfNjg5N2U1NzI3NDhlNGRkYjhmNTFlM2IzNmMxZWNiOWQpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZDI2NjI0ODc0NTBjNDRjNWE4ZGYyMzQwNDU2NTVjOTQgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfYzQ0MDM3NzUyNGRhNDhhOGI1ZWRjMDliNzEyYjU1ZWYgPSAkKCc8ZGl2IGlkPSJodG1sX2M0NDAzNzc1MjRkYTQ4YThiNWVkYzA5YjcxMmI1NWVmIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5Nb29yZSBQYXJrLFN1bW1lcmhpbGwgRWFzdCwgQ2VudHJhbCBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9kMjY2MjQ4NzQ1MGM0NGM1YThkZjIzNDA0NTY1NWM5NC5zZXRDb250ZW50KGh0bWxfYzQ0MDM3NzUyNGRhNDhhOGI1ZWRjMDliNzEyYjU1ZWYpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfMWUyMzUxMjUzNzY5NGIxN2JlMzk4ZTcyNDE3MDMwMmQuYmluZFBvcHVwKHBvcHVwX2QyNjYyNDg3NDUwYzQ0YzVhOGRmMjM0MDQ1NjU1Yzk0KTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzA1OWJlYTMxNzRkYjQxN2Y4YzViMGNiMjI1YzZiNDA1ID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjg2NDEyMjk5OTk5OTksLTc5LjQwMDA0OTNdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiYmx1ZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMzMTg2Y2MiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfNjg5N2U1NzI3NDhlNGRkYjhmNTFlM2IzNmMxZWNiOWQpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfN2MwYTE1NDk4NjRjNDU5YjgyMjg2ZGY3NDE4ZWZiNWEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfODQxY2NkYmMyZDZjNGUzMjk3MjdkZTJlMTllMGVhNmQgPSAkKCc8ZGl2IGlkPSJodG1sXzg0MWNjZGJjMmQ2YzRlMzI5NzI3ZGUyZTE5ZTBlYTZkIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5EZWVyIFBhcmssU3VtbWVyaGlsbCBXZXN0LEZvcmVzdCBIaWxsIFNFLFNvdXRoIEhpbGwsUmF0aG5lbGx5LCBDZW50cmFsIFRvcm9udG88L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzdjMGExNTQ5ODY0YzQ1OWI4MjI4NmRmNzQxOGVmYjVhLnNldENvbnRlbnQoaHRtbF84NDFjY2RiYzJkNmM0ZTMyOTcyN2RlMmUxOWUwZWE2ZCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl8wNTliZWEzMTc0ZGI0MTdmOGM1YjBjYjIyNWM2YjQwNS5iaW5kUG9wdXAocG9wdXBfN2MwYTE1NDk4NjRjNDU5YjgyMjg2ZGY3NDE4ZWZiNWEpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMmJjMTk3Y2UxOWYzNDQwM2E0MDkwODgwMTVkYjkxMTMgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42Nzk1NjI2LC03OS4zNzc1Mjk0MDAwMDAwMV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJibHVlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzMxODZjYyIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCk7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9iNGYzZWU1MWZmNmQ0ZDY4ODk0M2UwMDRkOTlhMTc0MCA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF83MmQ5Y2FmM2IxNmE0YzJmYjNlZmIyZmE2N2Q3MmNlMSA9ICQoJzxkaXYgaWQ9Imh0bWxfNzJkOWNhZjNiMTZhNGMyZmIzZWZiMmZhNjdkNzJjZTEiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPlJvc2VkYWxlLCBEb3dudG93biBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9iNGYzZWU1MWZmNmQ0ZDY4ODk0M2UwMDRkOTlhMTc0MC5zZXRDb250ZW50KGh0bWxfNzJkOWNhZjNiMTZhNGMyZmIzZWZiMmZhNjdkNzJjZTEpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfMmJjMTk3Y2UxOWYzNDQwM2E0MDkwODgwMTVkYjkxMTMuYmluZFBvcHVwKHBvcHVwX2I0ZjNlZTUxZmY2ZDRkNjg4OTQzZTAwNGQ5OWExNzQwKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2I5ODY2YWM3OTA1MzQ2MTk5OWY5ZTgzNmZhMzFjOTVjID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjY3OTY3LC03OS4zNjc2NzUzXSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImJsdWUiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjMzE4NmNjIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzY4OTdlNTcyNzQ4ZTRkZGI4ZjUxZTNiMzZjMWVjYjlkKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzIwNWIxYjhhNDAyNTQ4ZTI4Y2VkMGQxYzlkNjkxZWRjID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzIxYzBkOTZjOTg4NDQ1M2I5MWQ2MzVhM2I4NmY4N2NlID0gJCgnPGRpdiBpZD0iaHRtbF8yMWMwZDk2Yzk4ODQ0NTNiOTFkNjM1YTNiODZmODdjZSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+Q2FiYmFnZXRvd24sU3QuIEphbWVzIFRvd24sIERvd250b3duIFRvcm9udG88L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzIwNWIxYjhhNDAyNTQ4ZTI4Y2VkMGQxYzlkNjkxZWRjLnNldENvbnRlbnQoaHRtbF8yMWMwZDk2Yzk4ODQ0NTNiOTFkNjM1YTNiODZmODdjZSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9iOTg2NmFjNzkwNTM0NjE5OTlmOWU4MzZmYTMxYzk1Yy5iaW5kUG9wdXAocG9wdXBfMjA1YjFiOGE0MDI1NDhlMjhjZWQwZDFjOWQ2OTFlZGMpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfYTRmODE5ZTI4ZTc4NGJhYWEwYzViNTEyY2E3YWFjMTQgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NjU4NTk5LC03OS4zODMxNTk5MDAwMDAwMV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJibHVlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzMxODZjYyIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCk7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9lNGRiNTg3ZWNjMjI0YmM0OWI4YWUwN2VlOTkzOGY1NiA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9kZGIwZDRiMDA3ZDM0NDU5YjhiYmVmZmExNGM5MWM4ZCA9ICQoJzxkaXYgaWQ9Imh0bWxfZGRiMGQ0YjAwN2QzNDQ1OWI4YmJlZmZhMTRjOTFjOGQiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkNodXJjaCBhbmQgV2VsbGVzbGV5LCBEb3dudG93biBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9lNGRiNTg3ZWNjMjI0YmM0OWI4YWUwN2VlOTkzOGY1Ni5zZXRDb250ZW50KGh0bWxfZGRiMGQ0YjAwN2QzNDQ1OWI4YmJlZmZhMTRjOTFjOGQpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfYTRmODE5ZTI4ZTc4NGJhYWEwYzViNTEyY2E3YWFjMTQuYmluZFBvcHVwKHBvcHVwX2U0ZGI1ODdlY2MyMjRiYzQ5YjhhZTA3ZWU5OTM4ZjU2KTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzhjNzk3MDI4N2Q1ZDQ5ZjhiNzI1NDhlOGYyMjg0ZDZjID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjU0MjU5OSwtNzkuMzYwNjM1OV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJibHVlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzMxODZjYyIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCk7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF8zNDllODc1YjA0YWY0NTY5YmY1MDE1MGI1NWQyNmUzYSA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9kZDdhYTFhNGU5ZDk0NTYyYWZlMmZlZTIwOGYxNjg1YyA9ICQoJzxkaXYgaWQ9Imh0bWxfZGQ3YWExYTRlOWQ5NDU2MmFmZTJmZWUyMDhmMTY4NWMiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPlJlZ2VudCBQYXJrLEhhcmJvdXJmcm9udCwgRG93bnRvd24gVG9yb250bzwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMzQ5ZTg3NWIwNGFmNDU2OWJmNTAxNTBiNTVkMjZlM2Euc2V0Q29udGVudChodG1sX2RkN2FhMWE0ZTlkOTQ1NjJhZmUyZmVlMjA4ZjE2ODVjKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzhjNzk3MDI4N2Q1ZDQ5ZjhiNzI1NDhlOGYyMjg0ZDZjLmJpbmRQb3B1cChwb3B1cF8zNDllODc1YjA0YWY0NTY5YmY1MDE1MGI1NWQyNmUzYSk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl9lZWU5MjAzM2IxNDI0N2FlYmM4MDFmYWYyYjc3MTFjYyA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY1NzE2MTgsLTc5LjM3ODkzNzA5OTk5OTk5XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImJsdWUiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjMzE4NmNjIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzY4OTdlNTcyNzQ4ZTRkZGI4ZjUxZTNiMzZjMWVjYjlkKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2RiN2MwOTgwNTI3YzRjMTI4YWU3MzllNDhhNjg3OTlmID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzY4MTYyMzFkNTQ0NTQ2ZWE4YWI0YWI1NDEwM2I1ZjdkID0gJCgnPGRpdiBpZD0iaHRtbF82ODE2MjMxZDU0NDU0NmVhOGFiNGFiNTQxMDNiNWY3ZCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+UnllcnNvbixHYXJkZW4gRGlzdHJpY3QsIERvd250b3duIFRvcm9udG88L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2RiN2MwOTgwNTI3YzRjMTI4YWU3MzllNDhhNjg3OTlmLnNldENvbnRlbnQoaHRtbF82ODE2MjMxZDU0NDU0NmVhOGFiNGFiNTQxMDNiNWY3ZCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9lZWU5MjAzM2IxNDI0N2FlYmM4MDFmYWYyYjc3MTFjYy5iaW5kUG9wdXAocG9wdXBfZGI3YzA5ODA1MjdjNGMxMjhhZTczOWU0OGE2ODc5OWYpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMDU5OTdlYTAzMWNiNDU5YTlmZTFmODg1YTcxZTY3ODggPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTE0OTM5LC03OS4zNzU0MTc5XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImJsdWUiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjMzE4NmNjIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzY4OTdlNTcyNzQ4ZTRkZGI4ZjUxZTNiMzZjMWVjYjlkKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzE5MjMyYjM0N2IxMzQwNzQ4MzBiMmJjMjk0NzA1NjdjID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzdjOTc0ZTkzOTIxODQ0Y2VhNmQ2OTkwNmFmZGFlOGYxID0gJCgnPGRpdiBpZD0iaHRtbF83Yzk3NGU5MzkyMTg0NGNlYTZkNjk5MDZhZmRhZThmMSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+U3QuIEphbWVzIFRvd24sIERvd250b3duIFRvcm9udG88L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzE5MjMyYjM0N2IxMzQwNzQ4MzBiMmJjMjk0NzA1NjdjLnNldENvbnRlbnQoaHRtbF83Yzk3NGU5MzkyMTg0NGNlYTZkNjk5MDZhZmRhZThmMSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl8wNTk5N2VhMDMxY2I0NTlhOWZlMWY4ODVhNzFlNjc4OC5iaW5kUG9wdXAocG9wdXBfMTkyMzJiMzQ3YjEzNDA3NDgzMGIyYmMyOTQ3MDU2N2MpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfYmIyM2YyNjVjOTBlNDZhNWEyZjNjZTU4NjBkYmFhYjYgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NDQ3NzA3OTk5OTk5OTYsLTc5LjM3MzMwNjRdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiYmx1ZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMzMTg2Y2MiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfNjg5N2U1NzI3NDhlNGRkYjhmNTFlM2IzNmMxZWNiOWQpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZGQ0YWU2N2JiZmNkNDBkNzlkYjljNWZjYjRlY2U5M2YgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfNzQ4MzQ3OTEwNGU4NGVhOWJkNDdiNzFkZWM3YTg1YWMgPSAkKCc8ZGl2IGlkPSJodG1sXzc0ODM0NzkxMDRlODRlYTliZDQ3YjcxZGVjN2E4NWFjIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5CZXJjenkgUGFyaywgRG93bnRvd24gVG9yb250bzwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfZGQ0YWU2N2JiZmNkNDBkNzlkYjljNWZjYjRlY2U5M2Yuc2V0Q29udGVudChodG1sXzc0ODM0NzkxMDRlODRlYTliZDQ3YjcxZGVjN2E4NWFjKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyX2JiMjNmMjY1YzkwZTQ2YTVhMmYzY2U1ODYwZGJhYWI2LmJpbmRQb3B1cChwb3B1cF9kZDRhZTY3YmJmY2Q0MGQ3OWRiOWM1ZmNiNGVjZTkzZik7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl85ZGFhMWZiYWQ4NjI0NTY3YTUxMThjMjgxYTU5ZTc0ZiA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY1Nzk1MjQsLTc5LjM4NzM4MjZdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiYmx1ZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMzMTg2Y2MiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfNjg5N2U1NzI3NDhlNGRkYjhmNTFlM2IzNmMxZWNiOWQpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfNWZkMGVmMTgwZGJjNGViZDgwOTM1OTNiYWZiMDFmMzUgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfOWY5YTE3YzZkNGE4NGM4OTlhNjUzNWEwMjVjYThkNTAgPSAkKCc8ZGl2IGlkPSJodG1sXzlmOWExN2M2ZDRhODRjODk5YTY1MzVhMDI1Y2E4ZDUwIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5DZW50cmFsIEJheSBTdHJlZXQsIERvd250b3duIFRvcm9udG88L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzVmZDBlZjE4MGRiYzRlYmQ4MDkzNTkzYmFmYjAxZjM1LnNldENvbnRlbnQoaHRtbF85ZjlhMTdjNmQ0YTg0Yzg5OWE2NTM1YTAyNWNhOGQ1MCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl85ZGFhMWZiYWQ4NjI0NTY3YTUxMThjMjgxYTU5ZTc0Zi5iaW5kUG9wdXAocG9wdXBfNWZkMGVmMTgwZGJjNGViZDgwOTM1OTNiYWZiMDFmMzUpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfZDQxODE4MzQ2YjMwNDVhZmJkYzZmZGExZTJiNjg2OGUgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTA1NzEyMDAwMDAwMSwtNzkuMzg0NTY3NV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJibHVlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzMxODZjYyIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCk7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF8wMzNiNTVkMTk4MDg0ODg2OGQ5Y2ZmZjY1NmE3NWYzMyA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF80NDNhNzhiMTRlZDc0ZmQ2OTQ3ODRiOTk0ZTY2Mzg4NiA9ICQoJzxkaXYgaWQ9Imh0bWxfNDQzYTc4YjE0ZWQ3NGZkNjk0Nzg0Yjk5NGU2NjM4ODYiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPktpbmcsQWRlbGFpZGUsUmljaG1vbmQsIERvd250b3duIFRvcm9udG88L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzAzM2I1NWQxOTgwODQ4ODY4ZDljZmZmNjU2YTc1ZjMzLnNldENvbnRlbnQoaHRtbF80NDNhNzhiMTRlZDc0ZmQ2OTQ3ODRiOTk0ZTY2Mzg4Nik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9kNDE4MTgzNDZiMzA0NWFmYmRjNmZkYTFlMmI2ODY4ZS5iaW5kUG9wdXAocG9wdXBfMDMzYjU1ZDE5ODA4NDg4NjhkOWNmZmY2NTZhNzVmMzMpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfMjcwNjg4NjY2NTRkNDFmZjkzNDc0MjBiMTQ1M2NkNTIgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NDA4MTU3LC03OS4zODE3NTIyOTk5OTk5OV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJibHVlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzMxODZjYyIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCk7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF83MWI1YzEzNzA4Zjg0MDRjOTlkZDUzZDI4ZTg1ZWU0YSA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF80OTU5NjI3NjhhNGQ0Yjg2YWJhZmFmOWJhMTg1OTc2ZiA9ICQoJzxkaXYgaWQ9Imh0bWxfNDk1OTYyNzY4YTRkNGI4NmFiYWZhZjliYTE4NTk3NmYiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkhhcmJvdXJmcm9udCBFYXN0LFVuaW9uIFN0YXRpb24sVG9yb250byBJc2xhbmRzLCBEb3dudG93biBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF83MWI1YzEzNzA4Zjg0MDRjOTlkZDUzZDI4ZTg1ZWU0YS5zZXRDb250ZW50KGh0bWxfNDk1OTYyNzY4YTRkNGI4NmFiYWZhZjliYTE4NTk3NmYpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfMjcwNjg4NjY2NTRkNDFmZjkzNDc0MjBiMTQ1M2NkNTIuYmluZFBvcHVwKHBvcHVwXzcxYjVjMTM3MDhmODQwNGM5OWRkNTNkMjhlODVlZTRhKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzZhMjEzNTFjMzJjYjRlMTM5ZDk4NTk5YmJjYWI2MDI0ID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjQ3MTc2OCwtNzkuMzgxNTc2NDAwMDAwMDFdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiYmx1ZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMzMTg2Y2MiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfNjg5N2U1NzI3NDhlNGRkYjhmNTFlM2IzNmMxZWNiOWQpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfNTY2MGY5MWRlMDAwNDkyMDg2NTJjNDRjMzVmMTI2OTUgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfYjdiODhlOGIxN2NiNGY5N2JmZTMzZGU5YjM0MDk0MTUgPSAkKCc8ZGl2IGlkPSJodG1sX2I3Yjg4ZThiMTdjYjRmOTdiZmUzM2RlOWIzNDA5NDE1IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5Ub3JvbnRvIERvbWluaW9uIENlbnRyZSxEZXNpZ24gRXhjaGFuZ2UsIERvd250b3duIFRvcm9udG88L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzU2NjBmOTFkZTAwMDQ5MjA4NjUyYzQ0YzM1ZjEyNjk1LnNldENvbnRlbnQoaHRtbF9iN2I4OGU4YjE3Y2I0Zjk3YmZlMzNkZTliMzQwOTQxNSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl82YTIxMzUxYzMyY2I0ZTEzOWQ5ODU5OWJiY2FiNjAyNC5iaW5kUG9wdXAocG9wdXBfNTY2MGY5MWRlMDAwNDkyMDg2NTJjNDRjMzVmMTI2OTUpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfNTJkZTJlMzRhM2M3NDA1NmE2ZjBmMDIyY2MwYzZkNDYgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NDgxOTg1LC03OS4zNzk4MTY5MDAwMDAwMV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJibHVlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzMxODZjYyIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCk7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF80MTZhY2ViNTViNmU0OTBkODZkOTk0ZTg2MWM0ZDYwMyA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9mZmUwNmMwN2YxMTU0YjcyYWFlN2M2OWQ2NjQzYjM5NyA9ICQoJzxkaXYgaWQ9Imh0bWxfZmZlMDZjMDdmMTE1NGI3MmFhZTdjNjlkNjY0M2IzOTciIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkNvbW1lcmNlIENvdXJ0LFZpY3RvcmlhIEhvdGVsLCBEb3dudG93biBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF80MTZhY2ViNTViNmU0OTBkODZkOTk0ZTg2MWM0ZDYwMy5zZXRDb250ZW50KGh0bWxfZmZlMDZjMDdmMTE1NGI3MmFhZTdjNjlkNjY0M2IzOTcpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfNTJkZTJlMzRhM2M3NDA1NmE2ZjBmMDIyY2MwYzZkNDYuYmluZFBvcHVwKHBvcHVwXzQxNmFjZWI1NWI2ZTQ5MGQ4NmQ5OTRlODYxYzRkNjAzKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2ZjNzQ3NDA3ODRlODRkMjA5NzllNGFmNzBkZGE4OWNhID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNzExNjk0OCwtNzkuNDE2OTM1NTk5OTk5OTldLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiYmx1ZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMzMTg2Y2MiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfNjg5N2U1NzI3NDhlNGRkYjhmNTFlM2IzNmMxZWNiOWQpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfOTU3ZDk1MTc2M2VmNDJhNzllYjQ2OGUwNmI5MzZkNjggPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfMTY2MTM5MzQ0MmRhNDc0NGJjNDZkNWVlOWMwZTBjYmMgPSAkKCc8ZGl2IGlkPSJodG1sXzE2NjEzOTM0NDJkYTQ3NDRiYzQ2ZDVlZTljMGUwY2JjIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5Sb3NlbGF3biwgQ2VudHJhbCBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF85NTdkOTUxNzYzZWY0MmE3OWViNDY4ZTA2YjkzNmQ2OC5zZXRDb250ZW50KGh0bWxfMTY2MTM5MzQ0MmRhNDc0NGJjNDZkNWVlOWMwZTBjYmMpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfZmM3NDc0MDc4NGU4NGQyMDk3OWU0YWY3MGRkYTg5Y2EuYmluZFBvcHVwKHBvcHVwXzk1N2Q5NTE3NjNlZjQyYTc5ZWI0NjhlMDZiOTM2ZDY4KTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2VkNGZjYzBjYjYwYTRhNzZhYzM4ZTlhMThlMjUwNzdlID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjk2OTQ3NiwtNzkuNDExMzA3MjAwMDAwMDFdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiYmx1ZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMzMTg2Y2MiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfNjg5N2U1NzI3NDhlNGRkYjhmNTFlM2IzNmMxZWNiOWQpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfMmVkYzM1NDU5NmQ2NDZmNjg1YWM0NzJkZjIxYjJkMGQgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfZWM4YjMyYWZkZmEyNGFjYmJlMjM3MWJiOWExOTZmMTEgPSAkKCc8ZGl2IGlkPSJodG1sX2VjOGIzMmFmZGZhMjRhY2JiZTIzNzFiYjlhMTk2ZjExIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5Gb3Jlc3QgSGlsbCBXZXN0LEZvcmVzdCBIaWxsIE5vcnRoLCBDZW50cmFsIFRvcm9udG88L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzJlZGMzNTQ1OTZkNjQ2ZjY4NWFjNDcyZGYyMWIyZDBkLnNldENvbnRlbnQoaHRtbF9lYzhiMzJhZmRmYTI0YWNiYmUyMzcxYmI5YTE5NmYxMSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9lZDRmY2MwY2I2MGE0YTc2YWMzOGU5YTE4ZTI1MDc3ZS5iaW5kUG9wdXAocG9wdXBfMmVkYzM1NDU5NmQ2NDZmNjg1YWM0NzJkZjIxYjJkMGQpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfZTU4ZjMwOGMyODg5NDMxMzk2MmMxNDRkNjg1Mjg3ZDIgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NzI3MDk3LC03OS40MDU2Nzg0MDAwMDAwMV0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJibHVlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzMxODZjYyIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCk7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9iNmU5ZGUzNGE0Yzk0NDdmOTgzYzA3ODM4NDcxY2I3YSA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF8yYWQwNDBhMzRhYTM0NzI0OTI5MDQ2NDVjNjcyOTM0OCA9ICQoJzxkaXYgaWQ9Imh0bWxfMmFkMDQwYTM0YWEzNDcyNDkyOTA0NjQ1YzY3MjkzNDgiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPlRoZSBBbm5leCxOb3J0aCBNaWR0b3duLFlvcmt2aWxsZSwgQ2VudHJhbCBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9iNmU5ZGUzNGE0Yzk0NDdmOTgzYzA3ODM4NDcxY2I3YS5zZXRDb250ZW50KGh0bWxfMmFkMDQwYTM0YWEzNDcyNDkyOTA0NjQ1YzY3MjkzNDgpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfZTU4ZjMwOGMyODg5NDMxMzk2MmMxNDRkNjg1Mjg3ZDIuYmluZFBvcHVwKHBvcHVwX2I2ZTlkZTM0YTRjOTQ0N2Y5ODNjMDc4Mzg0NzFjYjdhKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2MxNTQ3NWM1MjcyNDRhOTFhOTU3ZGE5ZGZhNjU1ZGI2ID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjYyNjk1NiwtNzkuNDAwMDQ5M10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJibHVlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzMxODZjYyIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCk7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9mMDBmNzU5YzI0OGM0MjUzYjZiOWQ1OTE1MTM0MTBiMyA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF80ZmQzNDNkNzc4NDQ0YTdkYmIzMTA2NzUwMjIxNzZiMSA9ICQoJzxkaXYgaWQ9Imh0bWxfNGZkMzQzZDc3ODQ0NGE3ZGJiMzEwNjc1MDIyMTc2YjEiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPlVuaXZlcnNpdHkgb2YgVG9yb250byxIYXJib3JkLCBEb3dudG93biBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9mMDBmNzU5YzI0OGM0MjUzYjZiOWQ1OTE1MTM0MTBiMy5zZXRDb250ZW50KGh0bWxfNGZkMzQzZDc3ODQ0NGE3ZGJiMzEwNjc1MDIyMTc2YjEpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfYzE1NDc1YzUyNzI0NGE5MWE5NTdkYTlkZmE2NTVkYjYuYmluZFBvcHVwKHBvcHVwX2YwMGY3NTljMjQ4YzQyNTNiNmI5ZDU5MTUxMzQxMGIzKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzI1ODhiNmM4ZDUwYTQ3MTlhNzFjODE4YWVjZjM4NGUxID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjUzMjA1NywtNzkuNDAwMDQ5M10sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJibHVlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzMxODZjYyIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCk7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF9iOGQxMzM3OTBhMWQ0OWVkYWMzNmQ1ZjMyM2YxOWFmYiA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF9kZmVkNzE5MjBmYTQ0ODlkODY4NGViOTE5OTMwOTA3ZCA9ICQoJzxkaXYgaWQ9Imh0bWxfZGZlZDcxOTIwZmE0NDg5ZDg2ODRlYjkxOTkzMDkwN2QiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkNoaW5hdG93bixLZW5zaW5ndG9uIE1hcmtldCxHcmFuZ2UgUGFyaywgRG93bnRvd24gVG9yb250bzwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfYjhkMTMzNzkwYTFkNDllZGFjMzZkNWYzMjNmMTlhZmIuc2V0Q29udGVudChodG1sX2RmZWQ3MTkyMGZhNDQ4OWQ4Njg0ZWI5MTk5MzA5MDdkKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzI1ODhiNmM4ZDUwYTQ3MTlhNzFjODE4YWVjZjM4NGUxLmJpbmRQb3B1cChwb3B1cF9iOGQxMzM3OTBhMWQ0OWVkYWMzNmQ1ZjMyM2YxOWFmYik7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl82Nzk1YTJjOGYwZDI0ZWY2YjJjOTRmYjlkNWY1MTBmNyA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjYyODk0NjcsLTc5LjM5NDQxOTldLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiYmx1ZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMzMTg2Y2MiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfNjg5N2U1NzI3NDhlNGRkYjhmNTFlM2IzNmMxZWNiOWQpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfZWI2MjgwNjYwZmIwNDE0MGFmNjc3YmQ1MzQxNjAxNTEgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfZDhkNjczYzhjMjRlNDNkZGI2MWFkYTM0ODAwMzdmMGUgPSAkKCc8ZGl2IGlkPSJodG1sX2Q4ZDY3M2M4YzI0ZTQzZGRiNjFhZGEzNDgwMDM3ZjBlIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5Jc2xhbmQgYWlycG9ydCxTb3V0aCBOaWFnYXJhLEJhdGh1cnN0IFF1YXksQ04gVG93ZXIsS2luZyBhbmQgU3BhZGluYSxIYXJib3VyZnJvbnQgV2VzdCxSYWlsd2F5IExhbmRzLCBEb3dudG93biBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9lYjYyODA2NjBmYjA0MTQwYWY2NzdiZDUzNDE2MDE1MS5zZXRDb250ZW50KGh0bWxfZDhkNjczYzhjMjRlNDNkZGI2MWFkYTM0ODAwMzdmMGUpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfNjc5NWEyYzhmMGQyNGVmNmIyYzk0ZmI5ZDVmNTEwZjcuYmluZFBvcHVwKHBvcHVwX2ViNjI4MDY2MGZiMDQxNDBhZjY3N2JkNTM0MTYwMTUxKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyX2ZhMjUyZmQxZDNiNTQ1MDBhYTdmMzM5NDk4MjFmNTdlID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjQ2NDM1MiwtNzkuMzc0ODQ1OTk5OTk5OTldLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiYmx1ZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMzMTg2Y2MiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfNjg5N2U1NzI3NDhlNGRkYjhmNTFlM2IzNmMxZWNiOWQpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfODk0Njk1ZTNjYmMzNGZlZDk1MDE1MmY3OTA1ODY5MTkgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfODhiOTFmOWMyYWQ5NDFiOWIzZjQxMDE2ZThiYzM2NDUgPSAkKCc8ZGl2IGlkPSJodG1sXzg4YjkxZjljMmFkOTQxYjliM2Y0MTAxNmU4YmMzNjQ1IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5TdG4gQSBQTyBCb3hlcyAyNSBUaGUgRXNwbGFuYWRlLCBEb3dudG93biBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF84OTQ2OTVlM2NiYzM0ZmVkOTUwMTUyZjc5MDU4NjkxOS5zZXRDb250ZW50KGh0bWxfODhiOTFmOWMyYWQ5NDFiOWIzZjQxMDE2ZThiYzM2NDUpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfZmEyNTJmZDFkM2I1NDUwMGFhN2YzMzk0OTgyMWY1N2UuYmluZFBvcHVwKHBvcHVwXzg5NDY5NWUzY2JjMzRmZWQ5NTAxNTJmNzkwNTg2OTE5KTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzE4N2I0ZWYzZDQ3NTQyODBiMTU0Y2Q5MjMzYTdkNzY2ID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjQ4NDI5MiwtNzkuMzgyMjgwMl0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJibHVlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzMxODZjYyIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCk7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF83NTNjNWZmODdjMDA0N2E5OTg2YWMwNDkyNjFkZTE4ZiA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF8wMWVkMWY4ZWQzMGU0NjZhYmUwZDlkOGM1OGNlODM1NiA9ICQoJzxkaXYgaWQ9Imh0bWxfMDFlZDFmOGVkMzBlNDY2YWJlMGQ5ZDhjNThjZTgzNTYiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPlVuZGVyZ3JvdW5kIGNpdHksRmlyc3QgQ2FuYWRpYW4gUGxhY2UsIERvd250b3duIFRvcm9udG88L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzc1M2M1ZmY4N2MwMDQ3YTk5ODZhYzA0OTI2MWRlMThmLnNldENvbnRlbnQoaHRtbF8wMWVkMWY4ZWQzMGU0NjZhYmUwZDlkOGM1OGNlODM1Nik7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl8xODdiNGVmM2Q0NzU0MjgwYjE1NGNkOTIzM2E3ZDc2Ni5iaW5kUG9wdXAocG9wdXBfNzUzYzVmZjg3YzAwNDdhOTk4NmFjMDQ5MjYxZGUxOGYpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfZWNiOTQ5NTAzYjk5NGUwNjhlOGFkYzUyYzY5MTZiMTUgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42Njk1NDIsLTc5LjQyMjU2MzddLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiYmx1ZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMzMTg2Y2MiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfNjg5N2U1NzI3NDhlNGRkYjhmNTFlM2IzNmMxZWNiOWQpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfNThlNDIwMDZkY2NiNDYyNGE3MDdiNDJjNjEyZGQxNGQgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfZjk3NDFhYWFhMDY0NDU4NTg3NmY5NjUyZmQ5NGMyZTAgPSAkKCc8ZGl2IGlkPSJodG1sX2Y5NzQxYWFhYTA2NDQ1ODU4NzZmOTY1MmZkOTRjMmUwIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5DaHJpc3RpZSwgRG93bnRvd24gVG9yb250bzwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNThlNDIwMDZkY2NiNDYyNGE3MDdiNDJjNjEyZGQxNGQuc2V0Q29udGVudChodG1sX2Y5NzQxYWFhYTA2NDQ1ODU4NzZmOTY1MmZkOTRjMmUwKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyX2VjYjk0OTUwM2I5OTRlMDY4ZThhZGM1MmM2OTE2YjE1LmJpbmRQb3B1cChwb3B1cF81OGU0MjAwNmRjY2I0NjI0YTcwN2I0MmM2MTJkZDE0ZCk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl9kZmY5MDI3YTBhYmY0YjNjYTgxYjBiM2Y4ODBjZTRiNyA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY2OTAwNTEwMDAwMDAxLC03OS40NDIyNTkzXSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImJsdWUiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjMzE4NmNjIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzY4OTdlNTcyNzQ4ZTRkZGI4ZjUxZTNiMzZjMWVjYjlkKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzEyZTdlYmFjNTc0ODQ4MTk4N2ExMDE1MTRlYjVhMTUzID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2Q1NTlkMTk3YmMwNzRmMDBiZjAyYzk5Nzg4OGM2MThkID0gJCgnPGRpdiBpZD0iaHRtbF9kNTU5ZDE5N2JjMDc0ZjAwYmYwMmM5OTc4ODhjNjE4ZCIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+RG92ZXJjb3VydCBWaWxsYWdlLER1ZmZlcmluLCBXZXN0IFRvcm9udG88L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwXzEyZTdlYmFjNTc0ODQ4MTk4N2ExMDE1MTRlYjVhMTUzLnNldENvbnRlbnQoaHRtbF9kNTU5ZDE5N2JjMDc0ZjAwYmYwMmM5OTc4ODhjNjE4ZCk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl9kZmY5MDI3YTBhYmY0YjNjYTgxYjBiM2Y4ODBjZTRiNy5iaW5kUG9wdXAocG9wdXBfMTJlN2ViYWM1NzQ4NDgxOTg3YTEwMTUxNGViNWExNTMpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfNmU4MjEzYmEyYmQzNDExZjgyOWNiNzE5NWY2ZmRjNTggPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NDc5MjY3MDAwMDAwMDYsLTc5LjQxOTc0OTddLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiYmx1ZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMzMTg2Y2MiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfNjg5N2U1NzI3NDhlNGRkYjhmNTFlM2IzNmMxZWNiOWQpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfYmFjODY1YmM4NmZjNDRhN2EwNzllNTM4MWMzOGIzYWYgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfMzI2NzM3ZjcyZWZlNDg3ZWI2Y2JlZWFhMzcxMjFiNzAgPSAkKCc8ZGl2IGlkPSJodG1sXzMyNjczN2Y3MmVmZTQ4N2ViNmNiZWVhYTM3MTIxYjcwIiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5MaXR0bGUgUG9ydHVnYWwsVHJpbml0eSwgV2VzdCBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF9iYWM4NjViYzg2ZmM0NGE3YTA3OWU1MzgxYzM4YjNhZi5zZXRDb250ZW50KGh0bWxfMzI2NzM3ZjcyZWZlNDg3ZWI2Y2JlZWFhMzcxMjFiNzApOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfNmU4MjEzYmEyYmQzNDExZjgyOWNiNzE5NWY2ZmRjNTguYmluZFBvcHVwKHBvcHVwX2JhYzg2NWJjODZmYzQ0YTdhMDc5ZTUzODFjMzhiM2FmKTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzY2OGU2MGZmYTFiZDRiY2FhYTA0YjYxYzlkYzViNjcxID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjM2ODQ3MiwtNzkuNDI4MTkxNDAwMDAwMDJdLAogICAgICAgICAgICAgICAgewogICJidWJibGluZ01vdXNlRXZlbnRzIjogdHJ1ZSwKICAiY29sb3IiOiAiYmx1ZSIsCiAgImRhc2hBcnJheSI6IG51bGwsCiAgImRhc2hPZmZzZXQiOiBudWxsLAogICJmaWxsIjogdHJ1ZSwKICAiZmlsbENvbG9yIjogIiMzMTg2Y2MiLAogICJmaWxsT3BhY2l0eSI6IDAuNywKICAiZmlsbFJ1bGUiOiAiZXZlbm9kZCIsCiAgImxpbmVDYXAiOiAicm91bmQiLAogICJsaW5lSm9pbiI6ICJyb3VuZCIsCiAgIm9wYWNpdHkiOiAxLjAsCiAgInJhZGl1cyI6IDUsCiAgInN0cm9rZSI6IHRydWUsCiAgIndlaWdodCI6IDMKfQogICAgICAgICAgICAgICAgKS5hZGRUbyhtYXBfNjg5N2U1NzI3NDhlNGRkYjhmNTFlM2IzNmMxZWNiOWQpOwogICAgICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgcG9wdXBfNzQ4ZWY0MTU0YmQ4NGNhNDhlMTM2MTYwY2JiODY2ZmUgPSBMLnBvcHVwKHttYXhXaWR0aDogJzMwMCd9KTsKCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgdmFyIGh0bWxfN2EzMDg5ODMwNzU5NGE2NWExYWNjM2MxZTk5Y2VjNTkgPSAkKCc8ZGl2IGlkPSJodG1sXzdhMzA4OTgzMDc1OTRhNjVhMWFjYzNjMWU5OWNlYzU5IiBzdHlsZT0id2lkdGg6IDEwMC4wJTsgaGVpZ2h0OiAxMDAuMCU7Ij5FeGhpYml0aW9uIFBsYWNlLFBhcmtkYWxlIFZpbGxhZ2UsQnJvY2t0b24sIFdlc3QgVG9yb250bzwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfNzQ4ZWY0MTU0YmQ4NGNhNDhlMTM2MTYwY2JiODY2ZmUuc2V0Q29udGVudChodG1sXzdhMzA4OTgzMDc1OTRhNjVhMWFjYzNjMWU5OWNlYzU5KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzY2OGU2MGZmYTFiZDRiY2FhYTA0YjYxYzlkYzViNjcxLmJpbmRQb3B1cChwb3B1cF83NDhlZjQxNTRiZDg0Y2E0OGUxMzYxNjBjYmI4NjZmZSk7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl9mYzIxNzE1MWU3YzA0Nzk4OGZhYWRmNDdhMjVmZjE4ZCA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY2MTYwODMsLTc5LjQ2NDc2MzI5OTk5OTk5XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImJsdWUiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjMzE4NmNjIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzY4OTdlNTcyNzQ4ZTRkZGI4ZjUxZTNiMzZjMWVjYjlkKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzg2YzAzM2NhMzBmZDQzNjA4OTk3MmEwNzhkYTRiY2Y1ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzU4Zjc2M2IyYWRjOTRhMzliNjUwZGQ3ZDBlOGIzOWFlID0gJCgnPGRpdiBpZD0iaHRtbF81OGY3NjNiMmFkYzk0YTM5YjY1MGRkN2QwZThiMzlhZSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+SGlnaCBQYXJrLFRoZSBKdW5jdGlvbiBTb3V0aCwgV2VzdCBUb3JvbnRvPC9kaXY+JylbMF07CiAgICAgICAgICAgICAgICBwb3B1cF84NmMwMzNjYTMwZmQ0MzYwODk5NzJhMDc4ZGE0YmNmNS5zZXRDb250ZW50KGh0bWxfNThmNzYzYjJhZGM5NGEzOWI2NTBkZDdkMGU4YjM5YWUpOwogICAgICAgICAgICAKCiAgICAgICAgICAgIGNpcmNsZV9tYXJrZXJfZmMyMTcxNTFlN2MwNDc5ODhmYWFkZjQ3YTI1ZmYxOGQuYmluZFBvcHVwKHBvcHVwXzg2YzAzM2NhMzBmZDQzNjA4OTk3MmEwNzhkYTRiY2Y1KTsKCiAgICAgICAgICAgIAogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBjaXJjbGVfbWFya2VyXzFkZmQ2ZWE5NzM4NDQ1OGI5M2ZjMmRiOTBjNzQ4Mjc5ID0gTC5jaXJjbGVNYXJrZXIoCiAgICAgICAgICAgICAgICBbNDMuNjQ4OTU5NywtNzkuNDU2MzI1XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImJsdWUiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjMzE4NmNjIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzY4OTdlNTcyNzQ4ZTRkZGI4ZjUxZTNiMzZjMWVjYjlkKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwX2YxODUxY2QwZjJjMjRkNTRiOWY5OGNkYWM3MjVkYTk1ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sXzc1ODMwNmU1MWViZDQzMGRhODUwODllOTk5Mjc1OTIxID0gJCgnPGRpdiBpZD0iaHRtbF83NTgzMDZlNTFlYmQ0MzBkYTg1MDg5ZTk5OTI3NTkyMSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+UGFya2RhbGUsUm9uY2VzdmFsbGVzLCBXZXN0IFRvcm9udG88L2Rpdj4nKVswXTsKICAgICAgICAgICAgICAgIHBvcHVwX2YxODUxY2QwZjJjMjRkNTRiOWY5OGNkYWM3MjVkYTk1LnNldENvbnRlbnQoaHRtbF83NTgzMDZlNTFlYmQ0MzBkYTg1MDg5ZTk5OTI3NTkyMSk7CiAgICAgICAgICAgIAoKICAgICAgICAgICAgY2lyY2xlX21hcmtlcl8xZGZkNmVhOTczODQ0NThiOTNmYzJkYjkwYzc0ODI3OS5iaW5kUG9wdXAocG9wdXBfZjE4NTFjZDBmMmMyNGQ1NGI5Zjk4Y2RhYzcyNWRhOTUpOwoKICAgICAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGNpcmNsZV9tYXJrZXJfOWI1MGMzZjA4MjNjNGQzNDgzOTViOTk3NzBhMGU1ZDIgPSBMLmNpcmNsZU1hcmtlcigKICAgICAgICAgICAgICAgIFs0My42NTE1NzA2LC03OS40ODQ0NDk5XSwKICAgICAgICAgICAgICAgIHsKICAiYnViYmxpbmdNb3VzZUV2ZW50cyI6IHRydWUsCiAgImNvbG9yIjogImJsdWUiLAogICJkYXNoQXJyYXkiOiBudWxsLAogICJkYXNoT2Zmc2V0IjogbnVsbCwKICAiZmlsbCI6IHRydWUsCiAgImZpbGxDb2xvciI6ICIjMzE4NmNjIiwKICAiZmlsbE9wYWNpdHkiOiAwLjcsCiAgImZpbGxSdWxlIjogImV2ZW5vZGQiLAogICJsaW5lQ2FwIjogInJvdW5kIiwKICAibGluZUpvaW4iOiAicm91bmQiLAogICJvcGFjaXR5IjogMS4wLAogICJyYWRpdXMiOiA1LAogICJzdHJva2UiOiB0cnVlLAogICJ3ZWlnaHQiOiAzCn0KICAgICAgICAgICAgICAgICkuYWRkVG8obWFwXzY4OTdlNTcyNzQ4ZTRkZGI4ZjUxZTNiMzZjMWVjYjlkKTsKICAgICAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHBvcHVwXzAyM2NhM2MxZmY2NzRiNjI5MmZlZWYxZTQ5MDYzMmQ2ID0gTC5wb3B1cCh7bWF4V2lkdGg6ICczMDAnfSk7CgogICAgICAgICAgICAKICAgICAgICAgICAgICAgIHZhciBodG1sX2E0MWRjOGM1MDRjMTQ2YWVhYjkzYjM0MGMxYWEwNTQ1ID0gJCgnPGRpdiBpZD0iaHRtbF9hNDFkYzhjNTA0YzE0NmFlYWI5M2IzNDBjMWFhMDU0NSIgc3R5bGU9IndpZHRoOiAxMDAuMCU7IGhlaWdodDogMTAwLjAlOyI+UnVubnltZWRlLFN3YW5zZWEsIFdlc3QgVG9yb250bzwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfMDIzY2EzYzFmZjY3NGI2MjkyZmVlZjFlNDkwNjMyZDYuc2V0Q29udGVudChodG1sX2E0MWRjOGM1MDRjMTQ2YWVhYjkzYjM0MGMxYWEwNTQ1KTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzliNTBjM2YwODIzYzRkMzQ4Mzk1Yjk5NzcwYTBlNWQyLmJpbmRQb3B1cChwb3B1cF8wMjNjYTNjMWZmNjc0YjYyOTJmZWVmMWU0OTA2MzJkNik7CgogICAgICAgICAgICAKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgY2lyY2xlX21hcmtlcl82M2Q4NjZlZWI2MGI0ODI3ODM1NGQzMzAyZmU1NmZhZSA9IEwuY2lyY2xlTWFya2VyKAogICAgICAgICAgICAgICAgWzQzLjY2Mjc0MzksLTc5LjMyMTU1OF0sCiAgICAgICAgICAgICAgICB7CiAgImJ1YmJsaW5nTW91c2VFdmVudHMiOiB0cnVlLAogICJjb2xvciI6ICJibHVlIiwKICAiZGFzaEFycmF5IjogbnVsbCwKICAiZGFzaE9mZnNldCI6IG51bGwsCiAgImZpbGwiOiB0cnVlLAogICJmaWxsQ29sb3IiOiAiIzMxODZjYyIsCiAgImZpbGxPcGFjaXR5IjogMC43LAogICJmaWxsUnVsZSI6ICJldmVub2RkIiwKICAibGluZUNhcCI6ICJyb3VuZCIsCiAgImxpbmVKb2luIjogInJvdW5kIiwKICAib3BhY2l0eSI6IDEuMCwKICAicmFkaXVzIjogNSwKICAic3Ryb2tlIjogdHJ1ZSwKICAid2VpZ2h0IjogMwp9CiAgICAgICAgICAgICAgICApLmFkZFRvKG1hcF82ODk3ZTU3Mjc0OGU0ZGRiOGY1MWUzYjM2YzFlY2I5ZCk7CiAgICAgICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBwb3B1cF85ZmJmNzU5YmNiMzU0ZDQ0OGIwOGNlMjk4MzIwNTA0YyA9IEwucG9wdXAoe21heFdpZHRoOiAnMzAwJ30pOwoKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB2YXIgaHRtbF85YzZhZjcxN2UxMWI0ZTdjYjYzY2QzNzMwODdmMDZiMCA9ICQoJzxkaXYgaWQ9Imh0bWxfOWM2YWY3MTdlMTFiNGU3Y2I2M2NkMzczMDg3ZjA2YjAiIHN0eWxlPSJ3aWR0aDogMTAwLjAlOyBoZWlnaHQ6IDEwMC4wJTsiPkJ1c2luZXNzIFJlcGx5IE1haWwgUHJvY2Vzc2luZyBDZW50cmUgOTY5IEVhc3Rlcm4sIEVhc3QgVG9yb250bzwvZGl2PicpWzBdOwogICAgICAgICAgICAgICAgcG9wdXBfOWZiZjc1OWJjYjM1NGQ0NDhiMDhjZTI5ODMyMDUwNGMuc2V0Q29udGVudChodG1sXzljNmFmNzE3ZTExYjRlN2NiNjNjZDM3MzA4N2YwNmIwKTsKICAgICAgICAgICAgCgogICAgICAgICAgICBjaXJjbGVfbWFya2VyXzYzZDg2NmVlYjYwYjQ4Mjc4MzU0ZDMzMDJmZTU2ZmFlLmJpbmRQb3B1cChwb3B1cF85ZmJmNzU5YmNiMzU0ZDQ0OGIwOGNlMjk4MzIwNTA0Yyk7CgogICAgICAgICAgICAKICAgICAgICAKPC9zY3JpcHQ+\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>", 
                        "text/plain": "<folium.folium.Map at 0x7fe72a111080>"
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "# create map of New York using latitude and longitude values\nmap_toronto = folium.Map(location=[latitude, longitude], zoom_start=10)\n\n# add markers to map\nfor lat, lng, borough, neighbourhood in zip(toronto_data['Latitude'], toronto_data['Longitude'], toronto_data['Borough'], toronto_data['Neighbourhood']):\n    label = '{}, {}'.format(neighbourhood, borough)\n    label = folium.Popup(label, parse_html=True)\n    folium.CircleMarker(\n        [lat, lng],\n        radius=5,\n        popup=label,\n        color='blue',\n        fill=True,\n        fill_color='#3186cc',\n        fill_opacity=0.7,\n        parse_html=False).add_to(map_toronto)  \n    \nmap_toronto"
        }, 
        {
            "source": "Next, we are going to start utilizing the Foursquare API to explore the neighborhoods and segment them.", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "source": "#### Define Foursquare Credentials and Version", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "execution_count": 37, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "output_type": "stream", 
                    "name": "stdout", 
                    "text": "Your credentails:\nCLIENT_ID: BHVGJNZSVKF5GULTMAO03XHXC5M0V0KTOD1EAJJFODATCUCZ\nCLIENT_SECRET:EVKCPI4TWXMSTOGNA5W3GH5U5S3DQ2WIJ30TO4LXW4R21YHW\n"
                }
            ], 
            "source": "CLIENT_ID = 'BHVGJNZSVKF5GULTMAO03XHXC5M0V0KTOD1EAJJFODATCUCZ' # your Foursquare ID\nCLIENT_SECRET = 'EVKCPI4TWXMSTOGNA5W3GH5U5S3DQ2WIJ30TO4LXW4R21YHW' # your Foursquare Secret\nVERSION = '20180605' # Foursquare API version\n\nprint('Your credentails:')\nprint('CLIENT_ID: ' + CLIENT_ID)\nprint('CLIENT_SECRET:' + CLIENT_SECRET)"
        }, 
        {
            "source": "#### Let's explore the venues in Toronto", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "execution_count": 59, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [], 
            "source": "def getNearbyVenues(names, latitudes, longitudes, radius=500):\n    \n    venues_list=[]\n    for name, lat, lng in zip(names, latitudes, longitudes):\n        print(name)\n            \n        # create the API request URL\n        url = 'https://api.foursquare.com/v2/venues/explore?&client_id={}&client_secret={}&v={}&ll={},{}&radius={}&limit={}'.format(\n            CLIENT_ID, \n            CLIENT_SECRET, \n            VERSION, \n            lat, \n            lng, \n            radius, \n            LIMIT)\n            \n        # make the GET request\n        results = requests.get(url).json()[\"response\"]['groups'][0]['items']\n        \n        # return only relevant information for each nearby venue\n        venues_list.append([(\n            name, \n            lat, \n            lng, \n            v['venue']['name'], \n            v['venue']['location']['lat'], \n            v['venue']['location']['lng'],  \n            v['venue']['categories'][0]['name']) for v in results])\n\n    nearby_venues = pd.DataFrame([item for venue_list in venues_list for item in venue_list])\n    nearby_venues.columns = ['Neighbourhood', \n                  'Neighbourhood Latitude', \n                  'Neighbourhood Longitude', \n                  'Venue', \n                  'Venue Latitude', \n                  'Venue Longitude', \n                  'Venue Category']\n    \n    return(nearby_venues)"
        }, 
        {
            "execution_count": 60, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "output_type": "stream", 
                    "name": "stdout", 
                    "text": "The Beaches\nRiverdale,The Danforth West\nIndia Bazaar,The Beaches West\nStudio District\nLawrence Park\nDavisville North\nNorth Toronto West\nDavisville\nMoore Park,Summerhill East\nDeer Park,Summerhill West,Forest Hill SE,South Hill,Rathnelly\nRosedale\nCabbagetown,St. James Town\nChurch and Wellesley\nRegent Park,Harbourfront\nRyerson,Garden District\nSt. James Town\nBerczy Park\nCentral Bay Street\nKing,Adelaide,Richmond\nHarbourfront East,Union Station,Toronto Islands\nToronto Dominion Centre,Design Exchange\nCommerce Court,Victoria Hotel\nRoselawn\nForest Hill West,Forest Hill North\nThe Annex,North Midtown,Yorkville\nUniversity of Toronto,Harbord\nChinatown,Kensington Market,Grange Park\nIsland airport,South Niagara,Bathurst Quay,CN Tower,King and Spadina,Harbourfront West,Railway Lands\nStn A PO Boxes 25 The Esplanade\nUnderground city,First Canadian Place\nChristie\nDovercourt Village,Dufferin\nLittle Portugal,Trinity\nExhibition Place,Parkdale Village,Brockton\nHigh Park,The Junction South\nParkdale,Roncesvalles\nRunnymede,Swansea\nBusiness Reply Mail Processing Centre 969 Eastern\n"
                }
            ], 
            "source": "# Create a new venue\n\ntoronto_venues = getNearbyVenues(names=toronto_data['Neighbourhood'],\n                                   latitudes=toronto_data['Latitude'],\n                                   longitudes=toronto_data['Longitude']\n                                  )\n#toronto_venues"
        }, 
        {
            "execution_count": 61, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "output_type": "stream", 
                    "name": "stdout", 
                    "text": "(1692, 7)\n"
                }, 
                {
                    "execution_count": 61, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Neighbourhood</th>\n      <th>Neighbourhood Latitude</th>\n      <th>Neighbourhood Longitude</th>\n      <th>Venue</th>\n      <th>Venue Latitude</th>\n      <th>Venue Longitude</th>\n      <th>Venue Category</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>The Beaches</td>\n      <td>43.676357</td>\n      <td>-79.293031</td>\n      <td>The Big Carrot Natural Food Market</td>\n      <td>43.678879</td>\n      <td>-79.297734</td>\n      <td>Health Food Store</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>The Beaches</td>\n      <td>43.676357</td>\n      <td>-79.293031</td>\n      <td>Grover Pub and Grub</td>\n      <td>43.679181</td>\n      <td>-79.297215</td>\n      <td>Pub</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>The Beaches</td>\n      <td>43.676357</td>\n      <td>-79.293031</td>\n      <td>Starbucks</td>\n      <td>43.678798</td>\n      <td>-79.298045</td>\n      <td>Coffee Shop</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>The Beaches</td>\n      <td>43.676357</td>\n      <td>-79.293031</td>\n      <td>Upper Beaches</td>\n      <td>43.680563</td>\n      <td>-79.292869</td>\n      <td>Neighborhood</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Riverdale,The Danforth West</td>\n      <td>43.679557</td>\n      <td>-79.352188</td>\n      <td>Pantheon</td>\n      <td>43.677621</td>\n      <td>-79.351434</td>\n      <td>Greek Restaurant</td>\n    </tr>\n  </tbody>\n</table>\n</div>", 
                        "text/plain": "                 Neighbourhood  Neighbourhood Latitude  \\\n0                  The Beaches               43.676357   \n1                  The Beaches               43.676357   \n2                  The Beaches               43.676357   \n3                  The Beaches               43.676357   \n4  Riverdale,The Danforth West               43.679557   \n\n   Neighbourhood Longitude                               Venue  \\\n0               -79.293031  The Big Carrot Natural Food Market   \n1               -79.293031                 Grover Pub and Grub   \n2               -79.293031                           Starbucks   \n3               -79.293031                       Upper Beaches   \n4               -79.352188                            Pantheon   \n\n   Venue Latitude  Venue Longitude     Venue Category  \n0       43.678879       -79.297734  Health Food Store  \n1       43.679181       -79.297215                Pub  \n2       43.678798       -79.298045        Coffee Shop  \n3       43.680563       -79.292869       Neighborhood  \n4       43.677621       -79.351434   Greek Restaurant  "
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "print(toronto_venues.shape)\ntoronto_venues.head()"
        }, 
        {
            "execution_count": 62, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 62, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Neighbourhood Latitude</th>\n      <th>Neighbourhood Longitude</th>\n      <th>Venue</th>\n      <th>Venue Latitude</th>\n      <th>Venue Longitude</th>\n      <th>Venue Category</th>\n    </tr>\n    <tr>\n      <th>Neighbourhood</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Berczy Park</th>\n      <td>56</td>\n      <td>56</td>\n      <td>56</td>\n      <td>56</td>\n      <td>56</td>\n      <td>56</td>\n    </tr>\n    <tr>\n      <th>Business Reply Mail Processing Centre 969 Eastern</th>\n      <td>17</td>\n      <td>17</td>\n      <td>17</td>\n      <td>17</td>\n      <td>17</td>\n      <td>17</td>\n    </tr>\n    <tr>\n      <th>Cabbagetown,St. James Town</th>\n      <td>46</td>\n      <td>46</td>\n      <td>46</td>\n      <td>46</td>\n      <td>46</td>\n      <td>46</td>\n    </tr>\n    <tr>\n      <th>Central Bay Street</th>\n      <td>82</td>\n      <td>82</td>\n      <td>82</td>\n      <td>82</td>\n      <td>82</td>\n      <td>82</td>\n    </tr>\n    <tr>\n      <th>Chinatown,Kensington Market,Grange Park</th>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>Christie</th>\n      <td>16</td>\n      <td>16</td>\n      <td>16</td>\n      <td>16</td>\n      <td>16</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>Church and Wellesley</th>\n      <td>86</td>\n      <td>86</td>\n      <td>86</td>\n      <td>86</td>\n      <td>86</td>\n      <td>86</td>\n    </tr>\n    <tr>\n      <th>Commerce Court,Victoria Hotel</th>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>Davisville</th>\n      <td>35</td>\n      <td>35</td>\n      <td>35</td>\n      <td>35</td>\n      <td>35</td>\n      <td>35</td>\n    </tr>\n    <tr>\n      <th>Davisville North</th>\n      <td>8</td>\n      <td>8</td>\n      <td>8</td>\n      <td>8</td>\n      <td>8</td>\n      <td>8</td>\n    </tr>\n    <tr>\n      <th>Deer Park,Summerhill West,Forest Hill SE,South Hill,Rathnelly</th>\n      <td>14</td>\n      <td>14</td>\n      <td>14</td>\n      <td>14</td>\n      <td>14</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>Dovercourt Village,Dufferin</th>\n      <td>18</td>\n      <td>18</td>\n      <td>18</td>\n      <td>18</td>\n      <td>18</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>Exhibition Place,Parkdale Village,Brockton</th>\n      <td>18</td>\n      <td>18</td>\n      <td>18</td>\n      <td>18</td>\n      <td>18</td>\n      <td>18</td>\n    </tr>\n    <tr>\n      <th>Forest Hill West,Forest Hill North</th>\n      <td>5</td>\n      <td>5</td>\n      <td>5</td>\n      <td>5</td>\n      <td>5</td>\n      <td>5</td>\n    </tr>\n    <tr>\n      <th>Harbourfront East,Union Station,Toronto Islands</th>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>High Park,The Junction South</th>\n      <td>23</td>\n      <td>23</td>\n      <td>23</td>\n      <td>23</td>\n      <td>23</td>\n      <td>23</td>\n    </tr>\n    <tr>\n      <th>India Bazaar,The Beaches West</th>\n      <td>20</td>\n      <td>20</td>\n      <td>20</td>\n      <td>20</td>\n      <td>20</td>\n      <td>20</td>\n    </tr>\n    <tr>\n      <th>Island airport,South Niagara,Bathurst Quay,CN Tower,King and Spadina,Harbourfront West,Railway Lands</th>\n      <td>14</td>\n      <td>14</td>\n      <td>14</td>\n      <td>14</td>\n      <td>14</td>\n      <td>14</td>\n    </tr>\n    <tr>\n      <th>King,Adelaide,Richmond</th>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>Lawrence Park</th>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>Little Portugal,Trinity</th>\n      <td>62</td>\n      <td>62</td>\n      <td>62</td>\n      <td>62</td>\n      <td>62</td>\n      <td>62</td>\n    </tr>\n    <tr>\n      <th>Moore Park,Summerhill East</th>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>North Toronto West</th>\n      <td>21</td>\n      <td>21</td>\n      <td>21</td>\n      <td>21</td>\n      <td>21</td>\n      <td>21</td>\n    </tr>\n    <tr>\n      <th>Parkdale,Roncesvalles</th>\n      <td>16</td>\n      <td>16</td>\n      <td>16</td>\n      <td>16</td>\n      <td>16</td>\n      <td>16</td>\n    </tr>\n    <tr>\n      <th>Regent Park,Harbourfront</th>\n      <td>47</td>\n      <td>47</td>\n      <td>47</td>\n      <td>47</td>\n      <td>47</td>\n      <td>47</td>\n    </tr>\n    <tr>\n      <th>Riverdale,The Danforth West</th>\n      <td>43</td>\n      <td>43</td>\n      <td>43</td>\n      <td>43</td>\n      <td>43</td>\n      <td>43</td>\n    </tr>\n    <tr>\n      <th>Rosedale</th>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>Roselawn</th>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>Runnymede,Swansea</th>\n      <td>41</td>\n      <td>41</td>\n      <td>41</td>\n      <td>41</td>\n      <td>41</td>\n      <td>41</td>\n    </tr>\n    <tr>\n      <th>Ryerson,Garden District</th>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>St. James Town</th>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>Stn A PO Boxes 25 The Esplanade</th>\n      <td>92</td>\n      <td>92</td>\n      <td>92</td>\n      <td>92</td>\n      <td>92</td>\n      <td>92</td>\n    </tr>\n    <tr>\n      <th>Studio District</th>\n      <td>40</td>\n      <td>40</td>\n      <td>40</td>\n      <td>40</td>\n      <td>40</td>\n      <td>40</td>\n    </tr>\n    <tr>\n      <th>The Annex,North Midtown,Yorkville</th>\n      <td>24</td>\n      <td>24</td>\n      <td>24</td>\n      <td>24</td>\n      <td>24</td>\n      <td>24</td>\n    </tr>\n    <tr>\n      <th>The Beaches</th>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>Toronto Dominion Centre,Design Exchange</th>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>Underground city,First Canadian Place</th>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n      <td>100</td>\n    </tr>\n    <tr>\n      <th>University of Toronto,Harbord</th>\n      <td>33</td>\n      <td>33</td>\n      <td>33</td>\n      <td>33</td>\n      <td>33</td>\n      <td>33</td>\n    </tr>\n  </tbody>\n</table>\n</div>", 
                        "text/plain": "                                                    Neighbourhood Latitude  \\\nNeighbourhood                                                                \nBerczy Park                                                             56   \nBusiness Reply Mail Processing Centre 969 Eastern                       17   \nCabbagetown,St. James Town                                              46   \nCentral Bay Street                                                      82   \nChinatown,Kensington Market,Grange Park                                100   \nChristie                                                                16   \nChurch and Wellesley                                                    86   \nCommerce Court,Victoria Hotel                                          100   \nDavisville                                                              35   \nDavisville North                                                         8   \nDeer Park,Summerhill West,Forest Hill SE,South ...                      14   \nDovercourt Village,Dufferin                                             18   \nExhibition Place,Parkdale Village,Brockton                              18   \nForest Hill West,Forest Hill North                                       5   \nHarbourfront East,Union Station,Toronto Islands                        100   \nHigh Park,The Junction South                                            23   \nIndia Bazaar,The Beaches West                                           20   \nIsland airport,South Niagara,Bathurst Quay,CN T...                      14   \nKing,Adelaide,Richmond                                                 100   \nLawrence Park                                                            3   \nLittle Portugal,Trinity                                                 62   \nMoore Park,Summerhill East                                               2   \nNorth Toronto West                                                      21   \nParkdale,Roncesvalles                                                   16   \nRegent Park,Harbourfront                                                47   \nRiverdale,The Danforth West                                             43   \nRosedale                                                                 4   \nRoselawn                                                                 2   \nRunnymede,Swansea                                                       41   \nRyerson,Garden District                                                100   \nSt. James Town                                                         100   \nStn A PO Boxes 25 The Esplanade                                         92   \nStudio District                                                         40   \nThe Annex,North Midtown,Yorkville                                       24   \nThe Beaches                                                              4   \nToronto Dominion Centre,Design Exchange                                100   \nUnderground city,First Canadian Place                                  100   \nUniversity of Toronto,Harbord                                           33   \n\n                                                    Neighbourhood Longitude  \\\nNeighbourhood                                                                 \nBerczy Park                                                              56   \nBusiness Reply Mail Processing Centre 969 Eastern                        17   \nCabbagetown,St. James Town                                               46   \nCentral Bay Street                                                       82   \nChinatown,Kensington Market,Grange Park                                 100   \nChristie                                                                 16   \nChurch and Wellesley                                                     86   \nCommerce Court,Victoria Hotel                                           100   \nDavisville                                                               35   \nDavisville North                                                          8   \nDeer Park,Summerhill West,Forest Hill SE,South ...                       14   \nDovercourt Village,Dufferin                                              18   \nExhibition Place,Parkdale Village,Brockton                               18   \nForest Hill West,Forest Hill North                                        5   \nHarbourfront East,Union Station,Toronto Islands                         100   \nHigh Park,The Junction South                                             23   \nIndia Bazaar,The Beaches West                                            20   \nIsland airport,South Niagara,Bathurst Quay,CN T...                       14   \nKing,Adelaide,Richmond                                                  100   \nLawrence Park                                                             3   \nLittle Portugal,Trinity                                                  62   \nMoore Park,Summerhill East                                                2   \nNorth Toronto West                                                       21   \nParkdale,Roncesvalles                                                    16   \nRegent Park,Harbourfront                                                 47   \nRiverdale,The Danforth West                                              43   \nRosedale                                                                  4   \nRoselawn                                                                  2   \nRunnymede,Swansea                                                        41   \nRyerson,Garden District                                                 100   \nSt. James Town                                                          100   \nStn A PO Boxes 25 The Esplanade                                          92   \nStudio District                                                          40   \nThe Annex,North Midtown,Yorkville                                        24   \nThe Beaches                                                               4   \nToronto Dominion Centre,Design Exchange                                 100   \nUnderground city,First Canadian Place                                   100   \nUniversity of Toronto,Harbord                                            33   \n\n                                                    Venue  Venue Latitude  \\\nNeighbourhood                                                               \nBerczy Park                                            56              56   \nBusiness Reply Mail Processing Centre 969 Eastern      17              17   \nCabbagetown,St. James Town                             46              46   \nCentral Bay Street                                     82              82   \nChinatown,Kensington Market,Grange Park               100             100   \nChristie                                               16              16   \nChurch and Wellesley                                   86              86   \nCommerce Court,Victoria Hotel                         100             100   \nDavisville                                             35              35   \nDavisville North                                        8               8   \nDeer Park,Summerhill West,Forest Hill SE,South ...     14              14   \nDovercourt Village,Dufferin                            18              18   \nExhibition Place,Parkdale Village,Brockton             18              18   \nForest Hill West,Forest Hill North                      5               5   \nHarbourfront East,Union Station,Toronto Islands       100             100   \nHigh Park,The Junction South                           23              23   \nIndia Bazaar,The Beaches West                          20              20   \nIsland airport,South Niagara,Bathurst Quay,CN T...     14              14   \nKing,Adelaide,Richmond                                100             100   \nLawrence Park                                           3               3   \nLittle Portugal,Trinity                                62              62   \nMoore Park,Summerhill East                              2               2   \nNorth Toronto West                                     21              21   \nParkdale,Roncesvalles                                  16              16   \nRegent Park,Harbourfront                               47              47   \nRiverdale,The Danforth West                            43              43   \nRosedale                                                4               4   \nRoselawn                                                2               2   \nRunnymede,Swansea                                      41              41   \nRyerson,Garden District                               100             100   \nSt. James Town                                        100             100   \nStn A PO Boxes 25 The Esplanade                        92              92   \nStudio District                                        40              40   \nThe Annex,North Midtown,Yorkville                      24              24   \nThe Beaches                                             4               4   \nToronto Dominion Centre,Design Exchange               100             100   \nUnderground city,First Canadian Place                 100             100   \nUniversity of Toronto,Harbord                          33              33   \n\n                                                    Venue Longitude  \\\nNeighbourhood                                                         \nBerczy Park                                                      56   \nBusiness Reply Mail Processing Centre 969 Eastern                17   \nCabbagetown,St. James Town                                       46   \nCentral Bay Street                                               82   \nChinatown,Kensington Market,Grange Park                         100   \nChristie                                                         16   \nChurch and Wellesley                                             86   \nCommerce Court,Victoria Hotel                                   100   \nDavisville                                                       35   \nDavisville North                                                  8   \nDeer Park,Summerhill West,Forest Hill SE,South ...               14   \nDovercourt Village,Dufferin                                      18   \nExhibition Place,Parkdale Village,Brockton                       18   \nForest Hill West,Forest Hill North                                5   \nHarbourfront East,Union Station,Toronto Islands                 100   \nHigh Park,The Junction South                                     23   \nIndia Bazaar,The Beaches West                                    20   \nIsland airport,South Niagara,Bathurst Quay,CN T...               14   \nKing,Adelaide,Richmond                                          100   \nLawrence Park                                                     3   \nLittle Portugal,Trinity                                          62   \nMoore Park,Summerhill East                                        2   \nNorth Toronto West                                               21   \nParkdale,Roncesvalles                                            16   \nRegent Park,Harbourfront                                         47   \nRiverdale,The Danforth West                                      43   \nRosedale                                                          4   \nRoselawn                                                          2   \nRunnymede,Swansea                                                41   \nRyerson,Garden District                                         100   \nSt. James Town                                                  100   \nStn A PO Boxes 25 The Esplanade                                  92   \nStudio District                                                  40   \nThe Annex,North Midtown,Yorkville                                24   \nThe Beaches                                                       4   \nToronto Dominion Centre,Design Exchange                         100   \nUnderground city,First Canadian Place                           100   \nUniversity of Toronto,Harbord                                    33   \n\n                                                    Venue Category  \nNeighbourhood                                                       \nBerczy Park                                                     56  \nBusiness Reply Mail Processing Centre 969 Eastern               17  \nCabbagetown,St. James Town                                      46  \nCentral Bay Street                                              82  \nChinatown,Kensington Market,Grange Park                        100  \nChristie                                                        16  \nChurch and Wellesley                                            86  \nCommerce Court,Victoria Hotel                                  100  \nDavisville                                                      35  \nDavisville North                                                 8  \nDeer Park,Summerhill West,Forest Hill SE,South ...              14  \nDovercourt Village,Dufferin                                     18  \nExhibition Place,Parkdale Village,Brockton                      18  \nForest Hill West,Forest Hill North                               5  \nHarbourfront East,Union Station,Toronto Islands                100  \nHigh Park,The Junction South                                    23  \nIndia Bazaar,The Beaches West                                   20  \nIsland airport,South Niagara,Bathurst Quay,CN T...              14  \nKing,Adelaide,Richmond                                         100  \nLawrence Park                                                    3  \nLittle Portugal,Trinity                                         62  \nMoore Park,Summerhill East                                       2  \nNorth Toronto West                                              21  \nParkdale,Roncesvalles                                           16  \nRegent Park,Harbourfront                                        47  \nRiverdale,The Danforth West                                     43  \nRosedale                                                         4  \nRoselawn                                                         2  \nRunnymede,Swansea                                               41  \nRyerson,Garden District                                        100  \nSt. James Town                                                 100  \nStn A PO Boxes 25 The Esplanade                                 92  \nStudio District                                                 40  \nThe Annex,North Midtown,Yorkville                               24  \nThe Beaches                                                      4  \nToronto Dominion Centre,Design Exchange                        100  \nUnderground city,First Canadian Place                          100  \nUniversity of Toronto,Harbord                                   33  "
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "# Check how many venues for each neighbourhood\ntoronto_venues.groupby('Neighbourhood').count()"
        }, 
        {
            "execution_count": 63, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "output_type": "stream", 
                    "name": "stdout", 
                    "text": "There are 233 uniques categories.\n"
                }
            ], 
            "source": "# How many unique categories from the above results\nprint('There are {} uniques categories.'.format(len(toronto_venues['Venue Category'].unique())))"
        }, 
        {
            "source": "#### Analyze each Neighbourhood", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "execution_count": 64, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 64, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Neighbourhood</th>\n      <th>Adult Boutique</th>\n      <th>Afghan Restaurant</th>\n      <th>Airport</th>\n      <th>Airport Food Court</th>\n      <th>Airport Gate</th>\n      <th>Airport Lounge</th>\n      <th>Airport Service</th>\n      <th>Airport Terminal</th>\n      <th>American Restaurant</th>\n      <th>...</th>\n      <th>Train Station</th>\n      <th>Vegetarian / Vegan Restaurant</th>\n      <th>Video Game Store</th>\n      <th>Video Store</th>\n      <th>Vietnamese Restaurant</th>\n      <th>Wine Bar</th>\n      <th>Wine Shop</th>\n      <th>Wings Joint</th>\n      <th>Women's Store</th>\n      <th>Yoga Studio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>The Beaches</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>The Beaches</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>The Beaches</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>The Beaches</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Riverdale,The Danforth West</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows \u00d7 234 columns</p>\n</div>", 
                        "text/plain": "                 Neighbourhood  Adult Boutique  Afghan Restaurant  Airport  \\\n0                  The Beaches               0                  0        0   \n1                  The Beaches               0                  0        0   \n2                  The Beaches               0                  0        0   \n3                  The Beaches               0                  0        0   \n4  Riverdale,The Danforth West               0                  0        0   \n\n   Airport Food Court  Airport Gate  Airport Lounge  Airport Service  \\\n0                   0             0               0                0   \n1                   0             0               0                0   \n2                   0             0               0                0   \n3                   0             0               0                0   \n4                   0             0               0                0   \n\n   Airport Terminal  American Restaurant     ...       Train Station  \\\n0                 0                    0     ...                   0   \n1                 0                    0     ...                   0   \n2                 0                    0     ...                   0   \n3                 0                    0     ...                   0   \n4                 0                    0     ...                   0   \n\n   Vegetarian / Vegan Restaurant  Video Game Store  Video Store  \\\n0                              0                 0            0   \n1                              0                 0            0   \n2                              0                 0            0   \n3                              0                 0            0   \n4                              0                 0            0   \n\n   Vietnamese Restaurant  Wine Bar  Wine Shop  Wings Joint  Women's Store  \\\n0                      0         0          0            0              0   \n1                      0         0          0            0              0   \n2                      0         0          0            0              0   \n3                      0         0          0            0              0   \n4                      0         0          0            0              0   \n\n   Yoga Studio  \n0            0  \n1            0  \n2            0  \n3            0  \n4            0  \n\n[5 rows x 234 columns]"
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "# one hot encoding\ntoronto_onehot = pd.get_dummies(toronto_venues[['Venue Category']], prefix=\"\", prefix_sep=\"\")\ntoronto_onehot.head()\n# add neighborhood column back to dataframe\ntoronto_onehot['Neighbourhood'] = toronto_venues['Neighbourhood'] \n\n# move neighborhood column to the first column\nfixed_columns = [toronto_onehot.columns[-1]] + list(toronto_onehot.columns[:-1])\n\ntoronto_onehot = toronto_onehot[fixed_columns]\n\ntoronto_onehot.head()"
        }, 
        {
            "execution_count": 65, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 65, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Neighbourhood</th>\n      <th>Adult Boutique</th>\n      <th>Afghan Restaurant</th>\n      <th>Airport</th>\n      <th>Airport Food Court</th>\n      <th>Airport Gate</th>\n      <th>Airport Lounge</th>\n      <th>Airport Service</th>\n      <th>Airport Terminal</th>\n      <th>American Restaurant</th>\n      <th>...</th>\n      <th>Train Station</th>\n      <th>Vegetarian / Vegan Restaurant</th>\n      <th>Video Game Store</th>\n      <th>Video Store</th>\n      <th>Vietnamese Restaurant</th>\n      <th>Wine Bar</th>\n      <th>Wine Shop</th>\n      <th>Wings Joint</th>\n      <th>Women's Store</th>\n      <th>Yoga Studio</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Berczy Park</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>0.00</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Business Reply Mail Processing Centre 969 Eastern</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>0.00</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.058824</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Cabbagetown,St. James Town</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>0.00</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Central Bay Street</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.012195</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.012195</td>\n      <td>0.0</td>\n      <td>0.012195</td>\n      <td>0.00</td>\n      <td>0.012195</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.012195</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Chinatown,Kensington Market,Grange Park</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>...</td>\n      <td>0.0</td>\n      <td>0.050000</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n      <td>0.04</td>\n      <td>0.010000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows \u00d7 234 columns</p>\n</div>", 
                        "text/plain": "                                       Neighbourhood  Adult Boutique  \\\n0                                        Berczy Park             0.0   \n1  Business Reply Mail Processing Centre 969 Eastern             0.0   \n2                         Cabbagetown,St. James Town             0.0   \n3                                 Central Bay Street             0.0   \n4            Chinatown,Kensington Market,Grange Park             0.0   \n\n   Afghan Restaurant  Airport  Airport Food Court  Airport Gate  \\\n0                0.0      0.0                 0.0           0.0   \n1                0.0      0.0                 0.0           0.0   \n2                0.0      0.0                 0.0           0.0   \n3                0.0      0.0                 0.0           0.0   \n4                0.0      0.0                 0.0           0.0   \n\n   Airport Lounge  Airport Service  Airport Terminal  American Restaurant  \\\n0             0.0              0.0               0.0             0.000000   \n1             0.0              0.0               0.0             0.000000   \n2             0.0              0.0               0.0             0.000000   \n3             0.0              0.0               0.0             0.012195   \n4             0.0              0.0               0.0             0.000000   \n\n      ...       Train Station  Vegetarian / Vegan Restaurant  \\\n0     ...                 0.0                       0.000000   \n1     ...                 0.0                       0.000000   \n2     ...                 0.0                       0.000000   \n3     ...                 0.0                       0.012195   \n4     ...                 0.0                       0.050000   \n\n   Video Game Store  Video Store  Vietnamese Restaurant  Wine Bar  Wine Shop  \\\n0               0.0     0.000000                   0.00  0.000000        0.0   \n1               0.0     0.000000                   0.00  0.000000        0.0   \n2               0.0     0.000000                   0.00  0.000000        0.0   \n3               0.0     0.012195                   0.00  0.012195        0.0   \n4               0.0     0.000000                   0.04  0.010000        0.0   \n\n   Wings Joint  Women's Store  Yoga Studio  \n0          0.0            0.0     0.000000  \n1          0.0            0.0     0.058824  \n2          0.0            0.0     0.000000  \n3          0.0            0.0     0.012195  \n4          0.0            0.0     0.000000  \n\n[5 rows x 234 columns]"
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "# group rows by neighbourhood and by taking the mean of the frequency of occurrence of each category\ntoronto_grouped = toronto_onehot.groupby('Neighbourhood').mean().reset_index()\ntoronto_grouped.head()"
        }, 
        {
            "execution_count": 66, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [], 
            "source": "# Print each neighbourhood along with top 5 venues\nnum_top_venues = 5\n\nfor hood in toronto_grouped['Neighbourhood']:\n  #  print(\"----\"+hood+\"----\")\n    temp = toronto_grouped[toronto_grouped['Neighbourhood'] == hood].T.reset_index()\n    temp.columns = ['venue','freq']\n    temp = temp.iloc[1:]\n    temp['freq'] = temp['freq'].astype(float)\n    temp = temp.round({'freq': 2})"
        }, 
        {
            "execution_count": 67, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [], 
            "source": "# Function to sort venues in descending order\ndef return_most_common_venues(row, num_top_venues):\n    row_categories = row.iloc[1:]\n    row_categories_sorted = row_categories.sort_values(ascending=False)\n    \n    return row_categories_sorted.index.values[0:num_top_venues]"
        }, 
        {
            "execution_count": 68, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 68, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Neighbourhood</th>\n      <th>1st Most Common Venue</th>\n      <th>2nd Most Common Venue</th>\n      <th>3rd Most Common Venue</th>\n      <th>4th Most Common Venue</th>\n      <th>5th Most Common Venue</th>\n      <th>6th Most Common Venue</th>\n      <th>7th Most Common Venue</th>\n      <th>8th Most Common Venue</th>\n      <th>9th Most Common Venue</th>\n      <th>10th Most Common Venue</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Berczy Park</td>\n      <td>Coffee Shop</td>\n      <td>Cocktail Bar</td>\n      <td>Bakery</td>\n      <td>Cheese Shop</td>\n      <td>Caf\u00e9</td>\n      <td>Restaurant</td>\n      <td>Farmers Market</td>\n      <td>Seafood Restaurant</td>\n      <td>Steakhouse</td>\n      <td>Italian Restaurant</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Business Reply Mail Processing Centre 969 Eastern</td>\n      <td>Yoga Studio</td>\n      <td>Garden Center</td>\n      <td>Burrito Place</td>\n      <td>Restaurant</td>\n      <td>Smoke Shop</td>\n      <td>Auto Workshop</td>\n      <td>Recording Studio</td>\n      <td>Fast Food Restaurant</td>\n      <td>Light Rail Station</td>\n      <td>Garden</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Cabbagetown,St. James Town</td>\n      <td>Restaurant</td>\n      <td>Coffee Shop</td>\n      <td>Park</td>\n      <td>Pizza Place</td>\n      <td>Italian Restaurant</td>\n      <td>Caf\u00e9</td>\n      <td>Bakery</td>\n      <td>Market</td>\n      <td>Pub</td>\n      <td>Breakfast Spot</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Central Bay Street</td>\n      <td>Coffee Shop</td>\n      <td>Italian Restaurant</td>\n      <td>Caf\u00e9</td>\n      <td>Bubble Tea Shop</td>\n      <td>Bar</td>\n      <td>Burger Joint</td>\n      <td>Sandwich Place</td>\n      <td>Chinese Restaurant</td>\n      <td>Thai Restaurant</td>\n      <td>Spa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Chinatown,Kensington Market,Grange Park</td>\n      <td>Caf\u00e9</td>\n      <td>Bar</td>\n      <td>Chinese Restaurant</td>\n      <td>Vegetarian / Vegan Restaurant</td>\n      <td>Vietnamese Restaurant</td>\n      <td>Coffee Shop</td>\n      <td>Bakery</td>\n      <td>Caribbean Restaurant</td>\n      <td>Mexican Restaurant</td>\n      <td>Gaming Cafe</td>\n    </tr>\n  </tbody>\n</table>\n</div>", 
                        "text/plain": "                                       Neighbourhood 1st Most Common Venue  \\\n0                                        Berczy Park           Coffee Shop   \n1  Business Reply Mail Processing Centre 969 Eastern           Yoga Studio   \n2                         Cabbagetown,St. James Town            Restaurant   \n3                                 Central Bay Street           Coffee Shop   \n4            Chinatown,Kensington Market,Grange Park                  Caf\u00e9   \n\n  2nd Most Common Venue 3rd Most Common Venue          4th Most Common Venue  \\\n0          Cocktail Bar                Bakery                    Cheese Shop   \n1         Garden Center         Burrito Place                     Restaurant   \n2           Coffee Shop                  Park                    Pizza Place   \n3    Italian Restaurant                  Caf\u00e9                Bubble Tea Shop   \n4                   Bar    Chinese Restaurant  Vegetarian / Vegan Restaurant   \n\n   5th Most Common Venue 6th Most Common Venue 7th Most Common Venue  \\\n0                   Caf\u00e9            Restaurant        Farmers Market   \n1             Smoke Shop         Auto Workshop      Recording Studio   \n2     Italian Restaurant                  Caf\u00e9                Bakery   \n3                    Bar          Burger Joint        Sandwich Place   \n4  Vietnamese Restaurant           Coffee Shop                Bakery   \n\n  8th Most Common Venue 9th Most Common Venue 10th Most Common Venue  \n0    Seafood Restaurant            Steakhouse     Italian Restaurant  \n1  Fast Food Restaurant    Light Rail Station                 Garden  \n2                Market                   Pub         Breakfast Spot  \n3    Chinese Restaurant       Thai Restaurant                    Spa  \n4  Caribbean Restaurant    Mexican Restaurant            Gaming Cafe  "
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "# create the new dataframe and display the top 10 venues for each neighborhood\nnum_top_venues = 10\n\nindicators = ['st', 'nd', 'rd']\n\n# create columns according to number of top venues\ncolumns = ['Neighbourhood']\nfor ind in np.arange(num_top_venues):\n    try:\n        columns.append('{}{} Most Common Venue'.format(ind+1, indicators[ind]))\n    except:\n        columns.append('{}th Most Common Venue'.format(ind+1))\n\n# create a new dataframe\nneighborhoods_venues_sorted = pd.DataFrame(columns=columns)\nneighborhoods_venues_sorted['Neighbourhood'] = toronto_grouped['Neighbourhood']\n\nfor ind in np.arange(toronto_grouped.shape[0]):\n    neighborhoods_venues_sorted.iloc[ind, 1:] = return_most_common_venues(toronto_grouped.iloc[ind, :], num_top_venues)\n\nneighborhoods_venues_sorted.head()"
        }, 
        {
            "source": "#### Cluster Neighbourhoods", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "execution_count": 70, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 70, 
                    "metadata": {}, 
                    "data": {
                        "text/plain": "array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)"
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "# Run *k*-means to cluster the neighborhood into 5 clusters.\n# set number of clusters\nkclusters = 5\n\ntoronto_grouped_clustering = toronto_grouped.drop('Neighbourhood', 1)\n\n# run k-means clustering\nkmeans = KMeans(n_clusters=kclusters, random_state=0).fit(toronto_grouped_clustering)\n\n# check cluster labels generated for each row in the dataframe\nkmeans.labels_[0:10] "
        }, 
        {
            "execution_count": 74, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 74, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Postcode</th>\n      <th>Borough</th>\n      <th>Neighbourhood</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n      <th>Cluster Labels</th>\n      <th>1st Most Common Venue</th>\n      <th>2nd Most Common Venue</th>\n      <th>3rd Most Common Venue</th>\n      <th>4th Most Common Venue</th>\n      <th>5th Most Common Venue</th>\n      <th>6th Most Common Venue</th>\n      <th>7th Most Common Venue</th>\n      <th>8th Most Common Venue</th>\n      <th>9th Most Common Venue</th>\n      <th>10th Most Common Venue</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M4E</td>\n      <td>East Toronto</td>\n      <td>The Beaches</td>\n      <td>43.676357</td>\n      <td>-79.293031</td>\n      <td>4</td>\n      <td>Health Food Store</td>\n      <td>Neighborhood</td>\n      <td>Coffee Shop</td>\n      <td>Pub</td>\n      <td>Event Space</td>\n      <td>Ethiopian Restaurant</td>\n      <td>Electronics Store</td>\n      <td>Eastern European Restaurant</td>\n      <td>Dumpling Restaurant</td>\n      <td>Donut Shop</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M4K</td>\n      <td>East Toronto</td>\n      <td>Riverdale,The Danforth West</td>\n      <td>43.679557</td>\n      <td>-79.352188</td>\n      <td>0</td>\n      <td>Greek Restaurant</td>\n      <td>Coffee Shop</td>\n      <td>Ice Cream Shop</td>\n      <td>Bookstore</td>\n      <td>Italian Restaurant</td>\n      <td>Dessert Shop</td>\n      <td>Brewery</td>\n      <td>Bubble Tea Shop</td>\n      <td>Restaurant</td>\n      <td>Caribbean Restaurant</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M4L</td>\n      <td>East Toronto</td>\n      <td>India Bazaar,The Beaches West</td>\n      <td>43.668999</td>\n      <td>-79.315572</td>\n      <td>0</td>\n      <td>Pizza Place</td>\n      <td>Park</td>\n      <td>Liquor Store</td>\n      <td>Sandwich Place</td>\n      <td>Italian Restaurant</td>\n      <td>Brewery</td>\n      <td>Steakhouse</td>\n      <td>Movie Theater</td>\n      <td>Ice Cream Shop</td>\n      <td>Pub</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M4M</td>\n      <td>East Toronto</td>\n      <td>Studio District</td>\n      <td>43.659526</td>\n      <td>-79.340923</td>\n      <td>0</td>\n      <td>Caf\u00e9</td>\n      <td>Coffee Shop</td>\n      <td>Bakery</td>\n      <td>Gastropub</td>\n      <td>American Restaurant</td>\n      <td>Italian Restaurant</td>\n      <td>Yoga Studio</td>\n      <td>Cheese Shop</td>\n      <td>Fish Market</td>\n      <td>Juice Bar</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M4N</td>\n      <td>Central Toronto</td>\n      <td>Lawrence Park</td>\n      <td>43.728020</td>\n      <td>-79.388790</td>\n      <td>3</td>\n      <td>Park</td>\n      <td>Swim School</td>\n      <td>Bus Line</td>\n      <td>Yoga Studio</td>\n      <td>Diner</td>\n      <td>Falafel Restaurant</td>\n      <td>Event Space</td>\n      <td>Ethiopian Restaurant</td>\n      <td>Electronics Store</td>\n      <td>Eastern European Restaurant</td>\n    </tr>\n  </tbody>\n</table>\n</div>", 
                        "text/plain": "  Postcode          Borough                  Neighbourhood   Latitude  \\\n0      M4E     East Toronto                    The Beaches  43.676357   \n1      M4K     East Toronto    Riverdale,The Danforth West  43.679557   \n2      M4L     East Toronto  India Bazaar,The Beaches West  43.668999   \n3      M4M     East Toronto                Studio District  43.659526   \n4      M4N  Central Toronto                  Lawrence Park  43.728020   \n\n   Longitude  Cluster Labels 1st Most Common Venue 2nd Most Common Venue  \\\n0 -79.293031               4     Health Food Store          Neighborhood   \n1 -79.352188               0      Greek Restaurant           Coffee Shop   \n2 -79.315572               0           Pizza Place                  Park   \n3 -79.340923               0                  Caf\u00e9           Coffee Shop   \n4 -79.388790               3                  Park           Swim School   \n\n  3rd Most Common Venue 4th Most Common Venue 5th Most Common Venue  \\\n0           Coffee Shop                   Pub           Event Space   \n1        Ice Cream Shop             Bookstore    Italian Restaurant   \n2          Liquor Store        Sandwich Place    Italian Restaurant   \n3                Bakery             Gastropub   American Restaurant   \n4              Bus Line           Yoga Studio                 Diner   \n\n  6th Most Common Venue 7th Most Common Venue        8th Most Common Venue  \\\n0  Ethiopian Restaurant     Electronics Store  Eastern European Restaurant   \n1          Dessert Shop               Brewery              Bubble Tea Shop   \n2               Brewery            Steakhouse                Movie Theater   \n3    Italian Restaurant           Yoga Studio                  Cheese Shop   \n4    Falafel Restaurant           Event Space         Ethiopian Restaurant   \n\n  9th Most Common Venue       10th Most Common Venue  \n0   Dumpling Restaurant                   Donut Shop  \n1            Restaurant         Caribbean Restaurant  \n2        Ice Cream Shop                          Pub  \n3           Fish Market                    Juice Bar  \n4     Electronics Store  Eastern European Restaurant  "
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "# Let's create a new dataframe that includes the cluster as well as the top 10 venues for each neighborhood.\n# add clustering labels\nneighborhoods_venues_sorted.insert(0, 'Cluster Labels', kmeans.labels_)\n\ntoronto_merged = toronto_data\n\n# merge toronto_grouped with toronto_data to add latitude/longitude for each neighborhood\ntoronto_merged = toronto_merged.join(neighborhoods_venues_sorted.set_index('Neighbourhood'), on='Neighbourhood')\n\ntoronto_merged.head() # check the last columns!"
        }, 
        {
            "source": "#### Map the clusters", 
            "cell_type": "markdown", 
            "metadata": {}
        }, 
        {
            "execution_count": 75, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [
                {
                    "execution_count": 75, 
                    "metadata": {}, 
                    "data": {
                        "text/html": "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>", 
                        "text/plain": "<folium.folium.Map at 0x7fe72bfd1080>"
                    }, 
                    "output_type": "execute_result"
                }
            ], 
            "source": "# create map\nmap_clusters = folium.Map(location=[latitude, longitude], zoom_start=11)\n\n# set color scheme for the clusters\nx = np.arange(kclusters)\nys = [i + x + (i*x)**2 for i in range(kclusters)]\ncolors_array = cm.rainbow(np.linspace(0, 1, len(ys)))\nrainbow = [colors.rgb2hex(i) for i in colors_array]\n\n# add markers to the map\nmarkers_colors = []\nfor lat, lon, poi, cluster in zip(toronto_merged['Latitude'], toronto_merged['Longitude'], toronto_merged['Neighbourhood'], toronto_merged['Cluster Labels']):\n    label = folium.Popup(str(poi) + ' Cluster ' + str(cluster), parse_html=True)\n    folium.CircleMarker(\n        [lat, lon],\n        radius=5,\n        popup=label,\n        color=rainbow[cluster-1],\n        fill=True,\n        fill_color=rainbow[cluster-1],\n        fill_opacity=0.7).add_to(map_clusters)\n       \nmap_clusters"
        }, 
        {
            "execution_count": null, 
            "cell_type": "code", 
            "metadata": {}, 
            "outputs": [], 
            "source": ""
        }
    ], 
    "metadata": {
        "kernelspec": {
            "display_name": "Python 3.5", 
            "name": "python3", 
            "language": "python"
        }, 
        "language_info": {
            "mimetype": "text/x-python", 
            "nbconvert_exporter": "python", 
            "version": "3.5.5", 
            "name": "python", 
            "file_extension": ".py", 
            "pygments_lexer": "ipython3", 
            "codemirror_mode": {
                "version": 3, 
                "name": "ipython"
            }
        }
    }, 
    "nbformat": 4
}